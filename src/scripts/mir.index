#! /bin/csh
#* mir.index - List MIRIAD tasks and 1-line descriptions
#& mjs
#: user utility
#+
#    List MIRIAD tasks and 1-line descriptions.
#
#    Usage:  mir.index [-k] [arguments]
#
#            -k    [arguments] are a set of strings, and the
#                  output lists all tasks whose name
#                  or 1-line description contains the strings.
#                  The string search is case insensitive.
#
#            If [-k] is not used, then [arguments] are the
#            name(s) of MIRIAD tasks to be listed.
#
#            Without [-k] and [arguments], all tasks are listed.
#
#    PROGRAMMERS:  Use ``mir.sndex'' for subroutines.
#
#    Alias:  ``mirindex'' is an alias for ``mir.index''.
#--
#* mirindex - List MIRIAD tasks and 1-line descriptions
#& mjs
#: user utility
#+
#    List MIRIAD tasks and 1-line descriptions.
#
#    Usage:  mir.index [-k] [arguments]
#
#            -k    [arguments] are a set of strings, and the
#                  output lists all tasks whose name
#                  or 1-line description contains the strings.
#                  The string search is case insensitive.
#
#            If [-k] is not used, then [arguments] are the
#            name(s) of MIRIAD tasks to be listed.
#
#            Without [-k] and [arguments], all tasks are listed.
#
#    PROGRAMMERS:  Use ``mir.sndex'' for subroutines.
#
#    Alias:  ``mirindex'' is an alias for ``mir.index''.
#--
#
set pdoc = $MIRPDOC
set ttmp = /tmp
set theD = $ttmp/${user}.{$$}
set theT = $theD/tmpfile
set theF = $theD/file
set theA = $theD/awk
set theX  = "off"
#
if ($#argv == 1) then
	if (${argv[1]} == '-k') exit 0
endif
#
set theL = ""
if ($#argv) then
	if (${argv[1]} != '-k') then
		cd $pdoc
		foreach i ($argv)
			if (-e ${i}.doc) then
				set theL = ($theL ${i}.doc)
			else
				echo "--- $i ... no doc found	---"
			endif
		end
	else
		set theX = "on"
	endif
else
	set theX = "on"
endif
#
cd $ttmp
if (-e $theD) rm -fr $theD
mkdir $theD
echo '/%N/ {a = $2;}'				       >>! $theA
chmod 644						   $theA
echo '/%D/{for(i=2;i<=NF;i++)b=sprintf("%s %s",b,$i)}' >>  $theA
echo 'END{c=sprintf("%-11.10s%-65.65s",a,b);print c;}' >>  $theA
#
if ($theX == "off") then
	foreach i ($theL)
		cat $pdoc/$i | awk -f $theA >>! $theF
	end
else
	cd $pdoc
	ls *.doc > $theT
	foreach i (`cat $theT`)
		cat $pdoc/$i | awk -f $theA >>! $theF
	end
endif
#
if ($#argv) then
	if (${argv[1]} != '-k' || ! $#argv) then
		cat $theF
	else
		foreach i (${argv[2-]})
			echo ""
			grep -i $i $theF
			echo ""
		end
	endif
else
	cat $theF
endif
rm -fr $theD
#
exit 0
