#!/bin/csh -f
# --------------------------------------------------- 
#   note xmrecvlist isn't part of MIRIAD4 anymore
# --------------------------------------------------- 
set mir    = $MIR
set host   = $MIRHOST
set lsys   = $mir/bin/localsys
set srcdir = $mir/borrow/xmrecvlist
set bindir = $mir/bin/$host
set libdir = $mir/lib/$host
set docdir = $mir/doc/prog
set wwwdir = $mir/borrow/www/Library/Implementation
set admdir = $mir/src/sys/bin
# --------------------------------------------------- 
if (-e $lsys/pgm.xmrecvlist && ! $?local_compile) then
  echo $lsys/pgm.xmrecvlist exists =================
  setenv local_compile
  exec $lsys/pgm.xmrecvlist
endif
# ----------------------------------------------------------- 
if ($?Compile == 0) then
   if (-e $admdir/compile.${host}) then
      source $admdir/compile.${host}
   else
      echo "Cannot find $admdir/compile.${host} - exiting."
      exit 1
   endif
endif
# --------------------------------------------------- 

set inc = "-I$wwwdir"
set lnk = "-L$libdir -lwww"
set subs = (HTMIME.c get-http.c get-url.c get_uservals.c null_funcs.c \
            url_parse_utils.c xmrecvlist.c)

cd $srcdir
if ($host == sun4sol) set lnk = "$lnk -lsocket -lnsl"
set objs = ""
foreach i ($subs)
  rm -fr ${i:r}.o >& /dev/null
  echo ""
  echo "$Ccompile -c -o ${i:r}.o $inc $srcdir/$i"
        $Ccompile -c -o ${i:r}.o $inc $srcdir/$i
  if ($status == 0) set objs = "$objs ${i:r}.o"
end
echo ""
rm -fr $bindir/xmrecvlist >& /dev/null
echo "$Ccompile -o $bindir/xmrecvlist $objs $lnk"
      $Ccompile -o $bindir/xmrecvlist $objs $lnk
rm -fr $objs >& /dev/null
echo "`ls -l $bindir/xmrecvlist`"
# --------------------------------------------------- 
# Create the mailcap file
#
echo ""
echo "Creating the mailcap file for miriad's NCSA mosaic."
echo ""
#
cat << END_OF_TEXT >! $libdir/mosaic.mc
application/x-tar; tar -xf %s
application/x-dtm; \$MIRBIN/xmrecvlist -bg -f %s
application/x-multiget; \$MIRBIN/xmrecvlist -bg -f %s
END_OF_TEXT
chmod 644 $libdir/mosaic.mc
echo "`ls -l $libdir/mosaic.mc`"
# --------------------------------------------------- 
# Create the execution script
#
echo ""
echo "Creating the execution script xmbima."
echo ""
#
cat << END_OF_TEXT >! $bindir/xmbima
#! /bin/csh -f
# --------------------------------------------------------------
#* xmbima - Invoke ncsa_mosaic2.0 program with bima homepage
#& mjs
#: user utility
#+
#  Invoke ncsa_mosaic2.0 program with bima archive homepage.
#
#  NOTE:  All datasets will ultimately be stored in the
#  directory from which this script was started, so be sure
#  to cd into the directory BEFORE invoking this script.
#
#    Usage: xmbima [workspacedir]
#
#           workspacedir is a directory used by ncsa_mosaic2.0
#           for temporary storage of files; there must be
#           enough space available for the largest dataset that
#           you will transfer.
#
#           if workspacedir is omitted, ncsa_mosaic2.0 will
#           try to use /usr/tmp as temporary workspace; there
#           probably will not be enough space available there
#           for most datasets.
#
#           Best thing to do:  use a directory on a scratch
#           disk for workspacedir.
#
#
#
#
#  Obtaining ncsa_mosaic2.0:
#
#  ncsa_mosaic2.0 is available from NCSA's anonymous ftp server
#  (ftp.ncsa.uiuc.edu or 141.142.3.135), in the
#  Mosaic/Unix/binaries/2.0 directory; select the one for your
#  hardware, ftp it, uncompress it, chmod 755, and move it to
#  \$MIRBIN/ncsa_mosaic2.0.  Be sure to get NCSA Mosaic version
#  2.x from the Mosaic/Unix/binaries/2.0 directory.
#
#--
# --------------------------------------------------------------
# WARNING - this script is automatically generated, and will be
#           overwritten on each update by its generator.
# --------------------------------------------------------------
set tmp = "Mosaic*globalTypeMap: \$MIRLIB/mosaic.mc"
set pgm = \$MIRBIN/ncsa_mosaic2.0
set hm  = "http://bima-server.ncsa.uiuc.edu/secure/bima.html"
#
if      (\$#argv == 0) then
   exec \$pgm \\
         -xrm \${tmp:q} \\
          \$hm
#        -home \$hm
else if (\$#argv == 1) then
   exec \$pgm \\
         -xrm \${tmp:q} \\
         -tmpdir \$1 \\
         \$hm
#        -home \$hm
else
   echo "###"
   echo "Incorrect number of parms - exiting with ret code 1"
   echo "###"
   exit 1
endif
#
exit 0
END_OF_TEXT
chmod 755 $bindir/xmbima
echo "`ls -l $bindir/xmbima`"
# --------------------------------------------------- 
# Create the docs for the execution script
#
echo ""
echo "Creating the docs for execution script xmbima."
echo ""
(cd $docdir;$bindir/doc -p -e $bindir/xmbima)
echo "`ls -l $docdir/xmbima.cdoc`"
#
unsetenv local_compile
exit 0
