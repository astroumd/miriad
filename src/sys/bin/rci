#!/bin/csh -f
#
# Script to execute mira_rci on mira to checkin a program via rsh
# after copying it from here via rcp.  Multiple file names (no wild-
# card expansion) can be given -- the options will apply to all input
# files.  Username on command line (-U) supersedes the $mira_user
# variable set in script, which supersedes the $USER variable.
#
# Usage: rci [ci options] [-Uusername] [-ndirectory] filename(s)
#   -Uusername flag gives the login name of the user on mira.
#   -ndirectory means that the file is a new file to be checked in
#     into the directory (given in the argument directory) relative to
#     $MIR.  Note: if the -n flag is given, it applies to all input
#     files. 
#
# Example 1: rci -nsrc/prog/analysis newfile.for
#   -n flag means to check the file newfile.for as a new file into
#     the $MIR/src/prog/analysis directory.
#
# Example 2: rci -d -Udroberts regrid.for invert.for
#   -d flag means checkin date.  See man ci for details.
#   -Udroberts flag gives droberts as the login name on mira.
#
# Note that because of the difficulty of passing strings with double
# quotes in csh, no strings can have any spaces (suggest
# underscores).
#
# You can determine which file have been checked out locked
# (read/write) by typing:
# rsh mira.astro.uiuc.edu ls /export/bimaprog/VersionControl/modified
#--
#
# History:
#   17jul95 dar   Created file and tested it out.
#   11Aug95 dar   Added command line argument of username (-U), which
#                 supersedes $mira_user in script, which supersedes $USER.
#   12sep95 dar   Added variables: mirsrc, verbin, vermod.
#   14sep95 dar   Commented out lines refering to local since script does
#                 not use cp to bimaprog disk.
#   04oct95 dar   Pass version ID of rci/rco to mira_rci/MIRA_RCO to make
#                 sure people are using the most recent version.
#   28may96 dar   Added printing of version upon execution and help.
#   06jun96 dar   Changed upper level directory to $MIR rather that $MIRSRC.
#--
#
# Set version of rci/rco to be read by mira_rci/mira_rco to make sure
# they can talk to each other.  Echo version.
#
echo RCI is an old miriad-RCS utility.
exit 1
set version   = "06jun96"
set RSH = "ssh"
set RCP = "scp"
echo "rci (version $version)"
echo ""
#
# Set mira_user to the login name on mira.  Put your remote login in
# your .rhosts file on mira and visa versa.  This supersedes $USER
# shell variable and is superseded by the command line argument (-U).
#
set mira_user = ""
#
# There must be at least one argument to rci, otherwise goto usage
#
if ( $#argv == 0 ) goto usage
#
# Set initial variables.
#
set files     = ""
set flags     = ""
set i         = 1
set mira      = "mira.astro.uiuc.edu"
set verbin    = "/export/bimaprog/VersionControl/bin"
set vermod    = "/export/bimaprog/VersionControl/modified"
#
# Distinguish filenames from ci flags and username.
#
while ( $i <= $#argv )
  set temp     = `echo $argv[$i]`
  if ( `echo $temp | egrep -e -U` != "" ) then
    set mira_user = `echo $temp | sed -e 's/-U//'`
    goto mark
  endif
  set newflags = `echo $temp | grep "-"`
  set newfile  = `echo $temp | grep -v "-"`
  set flags    = "$flags $newflags"
  set files    = "$files $newfile"
  mark:
  @ i=$i + 1
end
if ( ! $?mira_user ) then
  set mira_user = $USER
else if ( $mira_user == "" ) then
  set mira_user = $USER
endif
set miruser  = "/export/bimaprog/$mira_user"
foreach file ( $files )
  set file = `echo $file | sed -e 's/ //'`
  if ( ! -e $file ) then
    echo "File $file not found in this directory"
    exit 1
  else
    echo ">>> Now remotely copying ${file} from local disk to archive"
    $RCP -p $file ${mira_user}@${mira}:${miruser}/${file}
    $RSH -l $mira_user $mira $verbin/mira_rci -V${version} `eval echo $file $flags`
  endif
  echo ">>> Finished with check in of ${file}"
end
exit 0
#
# Usage
#
usage:
echo "Script to execute mira_rci on mira to check in a program via rsh"
echo "after copying it from here via rcp.  Multiple file names (no wild-"
echo "card expansion) can be given -- the options will apply to all input"
echo "files.  Username on command line (-U) supersedes the" '$mira_user'
echo "variable set in script, which supersedes the" '$USER' "variable."
echo ""
echo "Usage: rci [ci options] [-Uusername] [-ndirectory] filename(s)"
echo "  -Uusername flag gives the login name of the user on mira."
echo "  -ndirectory means that the file is a new file to be checked in"
echo "    into the directory (given in the argument directory) relative to"
echo "    "'$MIR'".  Note: if the -n flag is given, it applies to all input"
echo "    files."
echo ""
echo "Example 1: rci -nsrc/prog/analysis newfile.for"
echo "  -n flag means to check the file newfile.for as a new file into"
echo "    the "'$MIR'"/src/prog/analysis directory."
echo ""
echo "Example 2: rci -d regrid.for invert.for"
echo "  -d flag means checkin date.  See man ci for details."
echo "  -Udroberts flag gives droberts as the login name on mira."
echo ""
echo "Note that because of the difficulty of passing strings with double"
echo "quotes in csh, strings cannot have any spaces (suggest using"
echo "underscores)."
echo ""
echo "You can determine which file have been checked out locked"
echo "(read/write) by typing:"
echo "rsh mira.astro.uiuc.edu ls /export/bimaprog/VersionControl/modified"
exit 1
