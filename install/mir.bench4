#! /bin/csh -fvx
#
#  MIR.BENCH4:  based on Shaye's Dec7, 2012 version of master_B1all.csh, 
#               using channels 125-139 for N2H+ in B1S from the CLASSy project.
#
#  Needs mirbench4.tar, ideally untarred in $MIR/data
#  prepared from original data as follows:
#
#    imsub in=N2H+.mean.cube     out=SD.cube 'region=im(125,139)'
#    uvaver vis=oct16_narrow.mir out=UV.mir  'select=win(2)' line=chan,15,125,1,1
#
#  this last step takes some time. The input visdata for uvaver is 15.6GB, the
#  output will be 1.1GB.
#  mir.bench4 needs a total of 7.1 GB, if all 15 planes are used, but 3.1 GB if
#  just one plane is processed. Most of this space is occupied by the beam.
#
#  uvaver    42"
#
#  The big CPU hogs in this script are (for those 15 channels)
#
#  invert   208"
#  mossen    94
#  mossdi  3736
#  mosmem 18000
#  restor2  800 (2nd and 3rd)
#
#  
########## START OF USER INPUT ###################################################

 # VIS should be the final calibrated uvdata (ideally place them in $MIR/data)
set VISIN         = UV.mir
 # Name of SD cube, should be on the same velocity grid as UV data
set SDIN          = SD.cube
 # Name new directory extension name. All the files will live in $OUTDIR
set OUTDIR        = SD+UV.bench4g

 # How many channels to run and starting where  (no channel averaging allowed)
set numchan       = 1
set startchan     = 8
 # Invert robust
set robust        = -0.5
 # Clean region sensitivity cut from mossen map (sen=0.13 in central regions)
set mossencut     = 0.26
 # SD interpolated resolution
set sdres         = 92
 # SD rms in Jy/bm
set sdrms         = 1.2
 # Mossdi rms cutoff
set cutoff        = 0.14
 # Mossdi gain
set gain          = 0.2
 # Mossdi niters
set iterations    = 5000
 # mosmem rmsfac
set mosmem1rmsfac = 1.0,1.0
 # mosmem q
set mosmem1q      = 40,6300

########## END OF USER INPUT #################################

########## START OF INPUT THAT WON'T CHANGE MUCH #################################
########## BUT YOU SHOULD EDIT SOME OF THESE ONCE FOUR YOUR CLOUD ! ##############


#INVERT
 # choose imsize based on 1/2 pwr of 3.5-m dishes
set size     = 228
 # since our beam is ~5", cell size of 1" is good
set cellsize = 1

#MOSSEN

#SD PREP
 # scale single-dish map by 65 Jy/K
set jyperk   = 65.0

#MOSMEM
set mosmem1niters = 45 
set mosmem1output = mosmem1.output

#MOSPSF

#RESTOR

set testmask=0
set testmodel=0

########## END OF INPUT THAT WON'T CHANGE MUCH  #################################
########## but allow key=val overrides via command line #########################

foreach args ($*)
  set $args
end


###############################################################################
# STEP 1: FILE PREP AND CREATE WORKING DIRECTORY FOR YOUR DATASET OF CHOICE
###############################################################################

mkdir -p $OUTDIR
cd       $OUTDIR
if ( -e  $MIR/data/$VISIN ) then
  ln -sf $MIR/data/$VISIN VISIN
else
  ln -sf        ../$VISIN VISIN
endif
if ( -e  $MIR/data/$SDIN ) then
  ln -sf $MIR/data/$SDIN SDIN
else
  ln -sf        ../$SDIN SDIN
endif

#################################################################################################################################
# STEP 2: CREATE DIRTY MAP AND DIRTY BEAM FOR numchan CHANNELS OF FULL-RESOLUTION UVDATA
# Files needed: 
# (1) calibrated narrowband uvdata (oct16_narrow.mir in this case -- 
#     make sure it is the same file you used in twoscaleprep.csh!)
# MAKE SURE TO DE-SELECT 10M-3.5M BASELINES!
# MAKE SURE TO CHECK THE STARTING VELOCITY OF THE SINGLE-DISH CUBE
#################################################################################################################################
#
/bin/rm -rf map beam
time invert vis=VISIN line=chan,$numchan,$startchan,1,1 \
            map=map beam=beam \
            imsize=$size,$size cell=$cellsize,$cellsize \
            robust=$robust options=systemp,double,mosaic \
            select='-ant(1,2,3,4,5,6)(16,17,18,19,20,21,22,23)'

##############################################
# STEP 2B (MOSSEN): DETERMINE AREA TO CLEAN ##
##############################################

/bin/rm -rf sen map1
time mossen in=map sen=sen gain=gain
     maths exp=map mask=sen.lt.$mossencut out=map1

###################################################################################
# STEP 3: PREPARE SINGLE-DISH CUBE FOR MOSMEM
# Files needed: 
# (1) Final single-dish cube (Kelvin)
# KNOW YOUR JY/BM SCALING
# KNOW YOUR 10-M PRIMARY BEAM, AND CALCULATE QUADRATURE SUM WITH 50'' INTERP BEAM
###################################################################################

# Regrid full single-dish cube to interferometer cells and map size
/bin/rm -rf tmp1
time regrid in=SDIN out=tmp1 tin=map1 options=noscale # axes=1,2,3

# Scale the map to Jy - add the same mask as int.map has
/bin/rm -rf sdmap
maths exp='tmp1*'$jyperk out=sdmap 
if ($testmask) copyhd in=map1 out=sdmap items=mask
#/bin/rm -rf tmp1

# Puthd beam and RMS info
puthd  in=sdmap/rms  value=$sdrms        type=d
puthd  in=sdmap/bmaj value=$sdres,arcsec type=d
puthd  in=sdmap/bmin value=$sdres,arcsec type=d
puthd  in=sdmap/bpa  value=0             type=d
minmax in=sdmap

# Generate single-dish beam and truncate at 10% level
/bin/rm -rf tmp2 tmp3 sdbeam
imsub in=map1 out=tmp2 region="image(1)"
imgen in=tmp2 out=tmp3 factor=0 object=gaussian spar=1,0,0,$sdres,$sdres,0
maths exp=tmp3 mask=tmp3.ge.0.10 out=sdbeam
minmax in=sdbeam
#/bin/rm -rf tmp2 tmp3

puthd  in=sdbeam/bmaj  value=$sdres,arcsec type=d
puthd  in=sdbeam/bmin  value=$sdres,arcsec type=d
puthd  in=sdbeam/bpa   value=0             type=d
puthd  in=sdbeam/btype value='BEAM' 
minmax in=sdbeam

###################################################################################
# STEP 4: GET CLEAN COMPONENTS FROM DIRTY MAP DEEP CLEAN TO BE USED AS MOSMEM MODEL
###################################################################################

/bin/rm -rf clean
time mossdi map=map1 beam=beam out=clean \
            gain=$gain cutoff=$cutoff niters=$iterations options=positive

###################################################################################
# STEP 5: MOSMEM
###################################################################################

#joint deconvolution
/bin/rm -rf memsol
set model=()
if ($testmodel) set model=(model=clean)
time mosmem map=map1,sdmap beam=beam,sdbeam out=memsol $model \
            niters=$mosmem1niters rmsfac=$mosmem1rmsfac q=$mosmem1q \
            > mosmem.log
     minmax in=memsol

###################################################################################
# STEP 6: MOSPSF
###################################################################################

/bin/rm -rf psf
mospsf beam=beam out=psf
imfit in=psf object=beam 'region=rel,box(-32,-32,31,31)' > psf.log
set bmaj=`grep "Major axis" psf.log | awk '{print $4}'`
set bmin=`grep "Minor axis" psf.log | awk '{print $4}'`
set bpa=`grep "Position angle" psf.log | awk '{print $4}'`
echo $bmaj $bmin $bpa

###################################################################################
# STEP 7: RESTOR
###################################################################################

/bin/rm -rf conv resid cmap
time restor map=map1 beam=beam mode=convolve \
            fwhm=$bmaj,$bmin pa=$bpa model=memsol out=conv
time restor map=map1 beam=beam mode=residual \
            fwhm=$bmaj,$bmin pa=$bpa model=memsol out=resid
time restor map=map1 beam=beam mode=clean \
            fwhm=$bmaj,$bmin pa=$bpa model=memsol out=cmap

# DONE!

if (0) then
  echo map, beam
  echo map1
  echo sdmap, sdbeam
  echo clean
  echo psf
  echo memsol
endif
