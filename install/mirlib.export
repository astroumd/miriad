#! /bin/csh -f
#
#  Generate files for subsystems like:  $AIPS++/code/aips/mirlib
#  (though note as of this writing, summer 2004) this is still the old MIR3
#  We assume here the new MIR4 version.


if ($?MIR == 0) then
  echo MIR is not defined, you need to have a running MIRIAD to clone the mirlib library
  exit 1
endif

set tar=0
set src=mirlib
set lib=/dev/null
set inc=/dev/null
set bin=/dev/null

# poor mans command line parser
foreach _a ($*)
  set $_a
end

if ($tar) then
  set version=`cat $MIR/VERSION`
  set src=mirlib-$version
endif

if (! -e $src) mkdir $src

cd $src
set inch=(maxdimc.h maxdim.h)
set subs=(bug.c hio.c key.c pack.c uvio.c xyzio.c dio.c headio.c interface.c maskio.c scrio.c xyio.c)
set subh=(miriad.h io.h hio.h sysdep.h)
set mkfl=(Makefile)

set cc=gcc
#set cflags=(-g -Wall)
set cflags=(-g -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE) 

# clone files from the $MIR tree

foreach f ($inch)
  cp $MIRINC/$f .
end

foreach f ($subh $subs)
  cp $MIRSUBS/$f .
end

cp $MIR/install/Makefile .

# only compile if a tar file is not made

if ($tar) then
  echo Creating export tar $src.tar.gz 
  cd ..
  tar zcf $src.tar.gz $src
  rm -rf $src
else
  echo Compiling in $src
  foreach f ($subs)
    $cc $cflags -c $f
  end
  ar ruv libmir.a *.o
  $cc $cflags -DTESTBED -o uvio uvio.c libmir.a -lm

  #  install
  set null=/dev/null
  if ($bin != $null) cp uvio     $bin
  if ($lib != $null) cp libmir.a $lib
  if ($inc != $null) cp miriad.h sysdep.h $inc
endif
