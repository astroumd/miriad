#-----------------------------------------------------------
# compile.generic.in - experimental to replace all of the compile.*
#   this file will be processed to compile.generic and then copied
#   to compile.$MIRHOST into $MIR/bin/localsys.
# files that can be selected in $MIR/src/sys/bin
#-----------------------------------------------------------
set mmir  = $MIR
set mhost = $MIRHOST
set mlsys = $mmir/bin/localsys
#
#  also of possible use:   
# -finit-local-zero              if you debug code and need initialized data
# -mcpu=i686 -march=i686 -malign-double -ffast-math         architecture opt
#  on darwin you may need to add -lSystemStubs for missing things like _printf$LDBLStub
#
# Here are some 'configure' variables of possible use :
# FLIBS=@FLIBS@
# F77_CMAIN_FFLAGS=@F77_CMAIN_FFLAGS@
# XINCS=@XINCS@ 
# XLIBS=@XLIBS@
# CFLAGS=@CFLAGS@
# FFLAGS=@FFLAGS@
# LDFLAGS=@LDFLAGS@
# CPPFLAGS=@CPPFLAGS@

set slib=@SLIB@
set slib_flags=""

# need -fno-stack-protector for undefined reference to `__stack_chk_fail_local'
#  -fno-stack-protector 
# need -fno-second-undercore if your compiler adds them and you don't want them
#  -fno-second-underscore
if ($slib == linux) then
  set slib_flags="-fPIC"
  if (@F77@ == "g77") set slib_flags="$slib_flags -fno-second-underscore"
endif

# ubuntu 11+ needs this for linking (doesn't seem to hurt for those not needed it, yet)
# see also:   https://wiki.ubuntu.com/NattyNarwhal/ToolchainTransition
if ($MIRHOST == linux) then
  set need=(-Wl,--no-as-needed   -Wl,--as-needed)
else
  set need=(" "                  " ")
endif


###         #define _LARGEFILE_SOURCE
###         #define _FILE_OFFSET_BITS=64
set lfs="-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -Wall"
if (-e $MIRLIB/libwcs.a) then
  set wcslib=($need[1] -lpgsbox -lwcs $need[2])
else
  set wcslib=()
endif
#  DSO linking might need this patch for AS_NEEDED, X11 is the usual offender for libpgplot.so
set X11=($need[1] -lX11 $need[2])
setenv Fcompile  "@F77@"
setenv Foptions  "-O $slib_flags"
setenv FoptionsN "$slib_flags"
setenv Flinkdir  "-L`echo $mmir/lib/$mhost $MIRXLIB | sed 's/ / -L/g'`"
setenv Flinklib  "$lfs -lmir -llinpack -lpgplot $wcslib $X11 -lm"
setenv Finclude  "-I`echo $mmir/src/inc $MIRXINC | sed 's/ / -I/g'`"
# the gnu compiler actually adds -Dlinux, so we don't need it here
setenv Ccompile  "@CC@"
setenv Coptions  "-O $lfs $slib_flags"
setenv CoptionsN "$lfs $slib_flags"
setenv Clinkdir  "-L`echo $mmir/lib/$mhost $MIRXLIB | sed 's/ / -L/g'`"
setenv Clinklib  "-lmir -llinpack -lpgplot $wcslib $X11 -lm"
setenv Cinclude  "-I`echo $mmir/src/inc $mmir/src/subs | sed 's/ / -I/g'`"

# NOF90 is conservative, some new routines use F90 style declarations
setenv Ratty 	 "$mmir/bin/$mhost/ratty -s f2c -b -D linux -D NOF90 -a"
setenv Intf2c 	 "$mmir/bin/$mhost/intf2c -s f2c -a"
#
#-----------------------------------------------------------
if ($?MIRDEBUG)   then
   setenv Coptions  "$Coptions  -g -DDEBUG"
   setenv CoptionsN "$CoptionsN -g -DDEBUG"
   setenv Foptions  "$Foptions  -g -DDEBUG"
   setenv FoptionsN "$FoptionsN -g -DDEBUG"
   setenv Ratty     "$Ratty -D DEBUG"
endif
if ($?MIRTESTBED) then
   setenv Coptions  "$Coptions  -DTESTBED"
   setenv CoptionsN "$CoptionsN -DTESTBED"
   setenv Foptions  "$Foptions  -DTESTBED"
   setenv FoptionsN "$FoptionsN -DTESTBED"
   setenv Ratty     "$Ratty -D TESTBED"
endif
#-----------------------------------------------------------
if  (-e $mlsys/compile.$mhost && ! $?local_compile ) then
  echo $mlsys/compile.$mhost exists =======================
  setenv local_compile
  source $mlsys/compile.$mhost
endif
#-----------------------------------------------------------
unset mmir
unset mhost
unset mlsys
unsetenv local_compile
#-----------------------------------------------------------
