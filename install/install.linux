#! /bin/csh -f
#
set version=12-jan-05
#
#  2-aug-99 Updated for Sebok's Mandrake setup
#  1-aug-00 Updated to allow to build private PGPLOT version
# 11-aug-00 add kdoc files manually
# 28-aug-00 added xmrecvlist, fixed HTTPC bug for libwww
#  8-oct-00 added velplotc as special program, if libforms.so present
# 17-oct-00 allow compilation with -g
#  7-mar-01 optionally use CVS archive to bootstrap from
# 12-jun-01 pgplot522
# 14-jun-01 atlod
# 18-jun-01 allow option to install from with CVS source code tree
# 18-aug-01 protect if newdir exists? comments on lesstif/openmotif
# 12-sep-01 unified script so it also works for solaris, and the default
#           is now to use internal=1
# 23-sep-01 various fixes for darwin (Mac-OS X)
# 11-feb-02 optional new intel compiler for linux
# 04-oct-02 modified usage of tr - colby
#  3-dec-02 rpfits is now source included
# 23-jan-03 add (optional) install of LGM's rad/lvg package in borrow
# 21-feb-03 more logfiles, so less to the screen
# 17-apr-03 fix up MIRSRC from skel
# 23-oct-04 configure now controls maxdim.h and maxdimc.h
# 25-nov-04 fortran compiler choice
#  4-jan-05 MacOSX (10.3=panther)
# 11-jan-05 some temporary MacOSX related fixes, and cleanup
#
#   Simple single-architecture installation of MIRIAD
#   (linux)
#   On our current single CPU Pii-400 this takes: (july 1999)
#	465.280u 81.630s 12:32.65 72.6% 0+0k 0+0io 1970021pf+0w
#   Piii-600 (laptop) w/ gcc-2.95.3 (june 2001) [more features]
#       482.280u 54.400s 12:04.94 74.0%	0+0k 0+0io 2924051pf+0w
#       397.400u 30.110s 8:09.19 87.3%	0+0k 0+0io 1532623pf+0w
#   Piii-800 (gaia) w/ gcc-2.96
#       715.810u 94.320s 14:06.76 95.6% 0+0k 0+0io 3582351pf+0w
#   Piv-1600 (nemo) w/ gcc-2.96
#	208.110u 28.510s 4:14.09 93.1%	0+0k 0+0io 1659485pf+0w
#
#-----------------------------------------------------------------------

#  carma, wsrt, atnf, sma, bima, ....
set telescope=carma

#   'newdir' is something that tags the date this version was made (e.g. 98jun08)
#   later on this will also be stored again in the file $MIR/DATE, where the CVS miriad
#   version will be stored in $MIR/VERSION

if (0) then
 set newdir=`date +%y%b%d | tr '[:upper:]' '[:lower:]'`
 set hosttype=`uname -s | tr '[:upper:]' '[:lower:]'`
else
 set newdir=`date +%y%b%d | tr A-Z a-z`
 set hosttype=`uname -s | tr A-Z a-z`
endif

# hosttypes we support:  linux, darwin (MacOSX), sunos (->sun4sol)

#	patch to use Stupar's original names
if ($hosttype == sunos) set hosttype=sun4sol
#       patch for the new sun blade ?
if ($hosttype == SlnOS) set hosttype=sun4sol
#	and for those who have failed it all....
if ($hosttype == SunOS) set hosttype=sun4sol

#
echo MIRIAD installation $version, for $hosttype

#	try and be intelligent about X  (the mirdefs script may help here if you need to modify)
#       AMD64 may use /usr/X11R6/lib64 here !!!
if ($hosttype == linux) then
  set mirxinc="/usr/include/X11"
  set mirxlib="/usr/X11R6/lib"
else if ($hosttype == sun4sol) then
	# sunos 5.6
  set mirxinc="/usr/include/X11"
  set mirxlib="/usr/X/lib"
else if ($hosttype == darwin) then
  set mirxinc="/usr/X11R6/include"
  set mirxlib="/usr/X11R6/lib"
else
  set mirxinc="/usr/include/X11"
  set mirxlib="/usr/X11R6/lib"
endif

# /sw/lib is for Fink (on MacOSX)
set searchlibs=(/lib /usr/lib /usr/X11R6/lib /local/lib /usr/local/lib /sw/lib)

set log=/tmp/miriad.install.$$.log

# 		MIRIAD V3:  (can be overriden with cvs=1, see below)
set tar=miriad.tar.gz
set ftp=ftp://ftp.astro.umd.edu/progs/bima

# 		find a reasonable root for miriad 
if ($?ASTROMAKE) then
  set mirroot=$ASTROMAKE/opt/miriad
else
  set mirroot=/usr/local/miriad
endif

#		remember from where this was installed
set install_root=`pwd`

#               turn on(1)/off(0) certain install options (command line)
set official=0              #  also modify the system (c)shrc.MIRIAD?
set shared=1                #  also build shared library libmir.so?
set pgplot=1                #  include PGPLOT in $MIRLIB ? (you almost ALWAYS want this to be 1)
set debug=0                 #  compile in debug (-g) mode ?
set cvs=1                   #  use CVS archive to get miriad.tar.gz ?
set internal=1              #  internal sourcecode build; overrides cvs, mirroot and newdir
set test=1                  #  mir.test  baseline test (batch oriented)
set testx=0		    #  mir.testx testing X routines (interactive)
set bench=0,512,1           #  mir.bench nchan,mapsize,cell  (nchan=0 will skip bench)
set intel=0                 #  use intel compiler (ifc/icc) for linux?
set man=1		    #  do manual pages
set lfs=(-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE) # LFS flags for uvio


#		   	remember from where we were installing, since we have stuff here.....
set install_dir=`pwd`

#                       parse optional command line arguments of the form keyword=value
foreach a ($*)
  set $a
end

echo Running configure, telescope=$telescope, logfile in configure.LOG:
./configure --with-telescope=$telescope >& configure.LOG
if ($status) then
  echo Problems running configure, check configure.LOG
  exit 1
else
  echo OK.
endif

#		care, wip still uses something else, it won't listen to $fortran
#		and you probably need 'f77' in your path
#               : rpfits already needs this
if ($intel) then
  set fortran=ifort
else
  set fortran=g77
endif

if ($internal) then
   # override newdir and mirroot if we do an internal build....
   # newdir is now just a tagname, not a subdirectory
   set newdir=CVS
   pushd .. >& /dev/null
   set mirroot=`pwd`
   popd >& /dev/null
   set cvs=0
   echo "Using internal build with mirroot=$mirroot"
else if ($cvs) then
   cd $mirroot
   echo "Working in $mirroot - extracting current CVS snapshot into $newdir"
   if ($?CVSROOT == 0) then
      setenv CVSROOT :pserver:guest@cvs.astro.umd.edu:/home/cvsroot
      echo "Use the password 'guest' for read-only CVS access"
      cvs login
   endif
   cvs export -D tomorrow -d $newdir miriad >>& $log
   echo "Extracting current CVS snapshot of wip into $newdir/borrow/wip" >>& $log
   (cd $newdir/borrow; cvs export -D tomorrow wip) >>& $log
else
   cd $mirroot
   echo "Working in $mirroot - getting a tarball"
   if (-e $tar) then
      echo "### Warning: $tar already present, using it"
   else
      echo "Picking up  $ftp/$tar"
      ncftpget $ftp/$tar
   endif

   if (-d $newdir) then
      echo "### Warning: $newdir already exists, using it"
      cd $newdir
   else
      echo "Untarring $tar"
      mkdir $newdir
      cd $newdir
      tar zxf ../$tar
   endif

endif

if ($internal) then
  setenv MIRTEMP $mirroot
else
  setenv MIRTEMP $mirroot/$newdir
endif
if ($debug == 1) setenv MIRDEBUG 1

set path = ( $MIRTEMP/src/sys/bin $path )
rehash
echo mir.mkdirs $MIRTEMP
mir.mkdirs $MIRTEMP >& /tmp/mir.mkdirs.log

set startcsh=$MIRTEMP/MIRRC.$hosttype
set startsh=$MIRTEMP/MIRSRC.$hosttype

#    	Linux really ... should work for SunOS too...
cat $MIRTEMP/src/sys/files/MIRRC.skel |\
  sed s,/mir_rootdir,$MIRTEMP, |\
  sed s,mir_hosttype,$hosttype, |\
  sed s,/usr/openwin/include,$mirxinc, |\
  sed s,/usr/local/lib/X11,$mirxlib, |\
  grep -v PGPLOT_FONT                                         >! $startcsh

cat $MIRTEMP/src/sys/files/MIRSRC.skel |\
  sed s,/mir_rootdir,$MIRTEMP, |\
  sed s,mir_hosttype,$hosttype, |\
  sed s,/usr/openwin/include,$mirxinc, |\
  sed s,/usr/local/lib/X11,$mirxlib, |\
  grep -v PGPLOT_FONT                                         >! $startsh


echo '# special additions'                                    >> $startcsh
echo 'if ($?LD_LIBRARY_PATH) then'	                      >> $startcsh
echo '  setenv LD_LIBRARY_PATH ${MIRLIB}:${LD_LIBRARY_PATH}'  >> $startcsh
echo 'else'                                                   >> $startcsh
echo '  setenv LD_LIBRARY_PATH $MIRLIB'                       >> $startcsh
echo 'endif'                                                  >> $startcsh
echo "# pgplot=$pgplot"                                       >> $startcsh
if ($pgplot) then
  echo 'setenv PGPLOT_DIR $MIRLIB'                            >> $startcsh
else
  echo 'setenv PGPLOT_DIR /usr/lib/pgplot'                    >> $startcsh
endif
echo 'setenv WIPHELP $MIR/borrow/wip/wiphelp.dat'             >> $startcsh


echo '# special additions'                                    >> $startsh
echo 'if test -z "$LD_LIBRARY_PATH"; then'	              >> $startsh
echo '  export LD_LIBRARY_PATH=${MIRLIB}:${LD_LIBRARY_PATH}'  >> $startsh
echo 'else'                                                   >> $startsh
echo '  export LD_LIBRARY_PATH=$MIRLIB'                       >> $startsh
echo 'fi'                                                     >> $startsh
echo "# pgplot=$pgplot"                                       >> $startsh
if ($pgplot) then
  echo 'export PGPLOT_DIR=$MIRLIB'                            >> $startsh
else
  echo 'export PGPLOT_DIR=/usr/lib/pgplot'                    >> $startsh
endif
echo 'export WIPHELP=$MIR/borrow/wip/wiphelp.dat'             >> $startsh



# astromake: only do this if you want to make THIS version miriad's 
# official one.
# you still need to patch the /usr/local/miriad/cshrc.MIRIAD
# for the system version !!
# also remove any old MIR from the environment, as it may confuse new MIRRC
unsetenv MIR
if ($official) then
  echo "source $MIRTEMP/MIRRC.$hosttype" > $mirroot/cshrc.MIRIAD
  echo ".     $MIRTEMP/MIRSRC.$hosttype" > $mirroot/shrc.MIRIAD
  source ~/cshrc.MIRIAD
endif

source $MIRTEMP/MIRRC.$hosttype

if ($intel) then
  echo "Using intel compiler for linux"
  cp $MIR/src/sys/bin/compile.linux_intel $MIR/bin/localsys/compile.linux
endif

cd $MIR

#  some bug in CVS setup, needs to be fixed
echo Making the MIR tree writable
chmod -R +w $MIR

######  This should not be needed, standard version should be g77 for linux
#cp $MIR/src/sys/bin/compile.linux $MIR/bin/localsys
#echo Edit compile.linux and make g77 the default compiler
#vi $MIR/bin/localsys/compile.linux
 
echo Installing scripts....
mir.install scripts 

#  another bug in the cvs setup, should also be fixed -- is now fixed
echo Yuck, resetting xbit in MIRBIN
chmod +x $MIRBIN/*

#	what was this for again?
if ($hosttype == linux) then
  if (-e /usr/lib/libbsd-compat.a) echo Warning: you have /usr/lib/libbsd-compat.a
  if (! -e /usr/lib/libbsd.a) echo Warning: you do not have /usr/lib/libbsd.a
endif

# special: linux generally has readline...   (this test failed on mdk71 ??)
#          it may also work on other systems
set dorl=0
foreach ldir ($searchlibs)
  foreach ext (a so)    
    if (-e $ldir/libreadline.$ext) then
        echo Borrowing the system version of libreadline.$ext for $hosttype from $ldir
        cp -p $ldir/libreadline.$ext $MIRLIB
        if (-e /usr/bin/ranlib && $ext == a) ranlib $MIRLIB/libreadline.$ext
        set dorl=1
        break
    endif
  end
  if ($dorl) break
end
if ($dorl == 0) then
   echo Your system does not seem to have readline, and miriad.c will not use it
endif

echo LIB: linpack subs 
mir.install linpack subs 
if ($pgplot) then
  mir.install pgplot
endif

#
if ($shared) then
  pushd $MIRLIB
  if (-e /usr/bin/ranlib) ranlib libmir.a

  if ($hosttype == linux) then
    ld -shared -o libmir.so --whole-archive libmir.a
      if (-e libpgplot.a && ! -e libpgplot.so) then
        ld -shared -o libpgplot.so --whole-archive libpgplot.a
    endif
  else if ($hosttype == darwin) then
    if (-e libmir.a) then
      mkdir tmp
      cd tmp
      ar xv ../libmir.a >& /dev/null
      gcc  -bundle -flat_namespace -undefined suppress -o ../libmir.so *.o
      cd ..
      rm -rf tmp
    endif
  else
    echo No shared support for $hosttype yet
  endif
  popd
endif

echo PGM: prog wip rad 
mir.install prog wip rad 

# special things....

echo Compiling UVIO:
cc -O $lfs -DTESTBED -I$MIRINC $MIRSUBS/uvio.c -o $MIRBIN/uvio $MIRLIB/libmir.a -lm >& $MIR/tmp/uvio.$$.$hosttype

# xcorf: (open)motif or lesstiff needs to have been installed for this
# aug 2001: newer versions of lesstiff use /usr/X11R6/LessTif/Motif1.2/include
#           instead of /usr/X11R6/include (which is now used by openmotif !!!)
#
set inc_motif=(/usr/X11R6/include /usr/X11R6/LessTif/Motif1.2/include /usr/X11R6/LessTif/Motif2.0/include)
set lib_motif=(/usr/X11R6/lib     /usr/X11R6/LessTif/Motif1.2/lib     /usr/X11R6/LessTif/Motif2.0/lib)
#   index into above array (1,2,..)
set imotif=1

echo Compiling XCORF:
cd $MIR/src/spec/xcorf
make sol6 SOLARISLIBS= \
          CFLAGS="-O -I$inc_motif[$imotif]" \
	  RFLAGS6= \
	  LFLAGS6=-L$lib_motif[$imotif] >& $MIR/tmp/xcorf.$$.$hosttype
mv xcorf $MIRBIN
make cleanup

# add keyword documentation to MIRPDOC
cd $MIRPDOC
rehash
doc -p $MIRCAT/keywords.kdoc

cd $MIR

if (-e $install_root/do_patch) then
    pushd $install_root >& /dev/null
    echo LOCAL install patches for $newdir
    echo $newdir > $MIR/DATE
    ./do_patch
    source $MIR/MIRRC.local
    # mkdir -p $MIR/local/install
	#  oops, what about the directories.....
    # cp -pr * $MIR/local/install
    popd >& /dev/null
endif

# velplotc: - make it depend on if Xforms is present
#       check http://world.std.com/~xforms/
#             http://savannah.nongnu.org/files/?group=xforms
set dofl=0
foreach ldir ($searchlibs)
    if (-e $ldir/libforms.a) then
        echo Borrowing the system version of libforms linux from $ldir
        cp -p $ldir/libforms.a $MIRLIB
	# this doesn't solve the forms.h file problem for recompilation
        set dofl=1
        break
    endif
end
if ($dofl) then
   echo Compiling velplotc:
   pushd $MIR/src/spec/velplotc >& /dev/null
   # TODO: makefile's should know about miriad's universe and inherit
   #       compile flags, names of compilers etc.
   make clean velplotc LIBFORMS=$MIRLIB/libforms.a FC=$fortran >& $MIR//tmp/velplotc.$$.$hosttype
   if ($status) echo Warning: problems compiling velplotc
   mv velplotc $MIRBIN
   make clean >>& $MIR//tmp/velplotc.$$.$hosttype
   popd >& /dev/null
else
   echo Could not find libforms.a to compile velplotc
   echo You will also need to find forms.h
endif

# ATNF stuff, linux only for now; always in debugging mode
if ($hosttype == linux) then

 echo Compiling rpfits
 pushd $MIR/borrow/rpfits >& /dev/null
 make ARCH=linux RANLIB=ranlib FC=$fortran FFLAGS=-g CFLAGS=-g >& $MIR/tmp/rpfits.$$.$hosttype 
 if ($status) echo Problems compiling RPFITS library
 mv librpfits.a $MIRLIB
 make clean
 popd >& /dev/null

 echo Compiling atnf code: atlod
 pushd $MIR/tmp >& /dev/null
 cp -p $MIR/src/prog/atnf/atlod.* .
 make -f $MIRLIB/Makefile atlod EL=-lrpfits >& $MIR/tmp/atlod.$$.$hosttype 
 if ($status) echo Problems compiling ATLOD
 mv atlod $MIRBIN
 doc -p atlod.for
 mv atlod.doc $MIRPDOC
 rm -f atlod.*
 popd >& /dev/null

endif


pushd $install_root >& /dev/null

if (-e checklist) then
  echo Checking binaries:
  set bad=0
  set badlist=$MIR/tmp/checklist.$$.bad
  set all=`wc -l checklist | awk '{print $1}'`
  foreach b (`cat checklist`)
    if (! -e $MIRBIN/$b) then
      @ bad++
      echo $b >> $badlist
    endif
  end
  if ($bad > 0) then
    echo Found $bad / $all binaries missing, check $badlist
  endif
endif

if ($test) then
    ./mir.test
endif

chmod +x mir.testx
if ($testx) then
   mir.testx
endif

set benchpars=(`echo $bench | awk -F, '{print $1,$2,$3}'`)
if ($#benchpars == 3 && $benchpars[1] > 1) then
   mir.bench nchan=$benchpars[1] mapsize=$benchpars[2] cell=$benchpars[3]
endif


#   Now tag it, so we can 'find -newer' things that have been updated since creation!
echo MIRIAD Installation done on `hostname` by `whoami` on `date` with `uname -a` > $MIRLIB/Installed.tag
exit 0



