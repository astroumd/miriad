\nonstopmode
\documentstyle{article}
\begin{document}
\setlength{\parindent}{0pt}
\setlength{\parskip}{2.5mm}
\section{CAXPY}
\index{blas,CAXPY}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE CAXPY(N,CA,CX,INCX,CY,INCY)
 
      CONSTANT TIMES A VECTOR PLUS A VECTOR.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CCHDC}
\index{linpack,CCHDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CCHDC(A,LDA,P,WORK,JPVT,JOB,INFO)
      INTEGER LDA,P,JPVT(1),JOB,INFO
      COMPLEX A(LDA,1),WORK(1)
 
      CCHDC COMPUTES THE CHOLESKY DECOMPOSITION OF A POSITIVE DEFINITE
      MATRIX.  A PIVOTING OPTION ALLOWS THE USER TO ESTIMATE THE
      CONDITION OF A POSITIVE DEFINITE MATRIX OR DETERMINE THE RANK
      OF A POSITIVE SEMIDEFINITE MATRIX.
 
      ON ENTRY
 
          A      COMPLEX(LDA,P).
                 A CONTAINS THE MATRIX WHOSE DECOMPOSITION IS TO
                 BE COMPUTED.  ONLT THE UPPER HALF OF A NEED BE STORED.
                 THE LOWER PART OF THE ARRAY A IS NOT REFERENCED.
 
          LDA    INTEGER.
                 LDA IS THE LEADING DIMENSION OF THE ARRAY A.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX.
 
          WORK   COMPLEX.
                 WORK IS A WORK ARRAY.
 
          JPVT   INTEGER(P).
                 JPVT CONTAINS INTEGERS THAT CONTROL THE SELECTION
                 OF THE PIVOT ELEMENTS, IF PIVOTING HAS BEEN REQUESTED.
                 EACH DIAGONAL ELEMENT A(K,K)
                 IS PLACED IN ONE OF THREE CLASSES ACCORDING TO THE
                 VALUE OF JPVT(K).
 
                    IF JPVT(K) .GT. 0, THEN X(K) IS AN INITIAL
                                       ELEMENT.
 
                    IF JPVT(K) .EQ. 0, THEN X(K) IS A FREE ELEMENT.
 
                    IF JPVT(K) .LT. 0, THEN X(K) IS A FINAL ELEMENT.
 
                 BEFORE THE DECOMPOSITION IS COMPUTED, INITIAL ELEMENTS
                 ARE MOVED BY SYMMETRIC ROW AND COLUMN INTERCHANGES TO
                 THE BEGINNING OF THE ARRAY A AND FINAL
                 ELEMENTS TO THE END.  BOTH INITIAL AND FINAL ELEMENTS
                 ARE FROZEN IN PLACE DURING THE COMPUTATION AND ONLY
                 FREE ELEMENTS ARE MOVED.  AT THE K-TH STAGE OF THE
                 REDUCTION, IF A(K,K) IS OCCUPIED BY A FREE ELEMENT
                 IT IS INTERCHANGED WITH THE LARGEST FREE ELEMENT
                 A(L,L) WITH L .GE. K.  JPVT IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         JOB     INTEGER.
                 JOB IS AN INTEGER THAT INITIATES COLUMN PIVOTING.
                 IF JOB .EQ. 0, NO PIVOTING IS DONE.
                 IF JOB .NE. 0, PIVOTING IS DONE.
 
      ON RETURN
 
          A      A CONTAINS IN ITS UPPER HALF THE CHOLESKY FACTOR
                 OF THE MATRIX A AS IT HAS BEEN PERMUTED BY PIVOTING.
 
          JPVT   JPVT(J) CONTAINS THE INDEX OF THE DIAGONAL ELEMENT
                 OF A THAT WAS MOVED INTO THE J-TH POSITION,
                 PROVIDED PIVOTING WAS REQUESTED.
 
          INFO   CONTAINS THE INDEX OF THE LAST POSITIVE DIAGONAL
                 ELEMENT OF THE CHOLESKY FACTOR.
 
      FOR POSITIVE DEFINITE MATRICES INFO = P IS THE NORMAL RETURN.
      FOR PIVOTING WITH POSITIVE SEMIDEFINITE MATRICES INFO WILL
      IN GENERAL BE LESS THAN P.  HOWEVER, INFO MAY BE GREATER THAN
      THE RANK OF A, SINCE ROUNDING ERROR CAN CAUSE AN OTHERWISE ZERO
      ELEMENT TO BE POSITIVE. INDEFINITE SYSTEMS WILL ALWAYS CAUSE
      INFO TO BE LESS THAN P.
 
\end{verbatim}}
\section{CCHDD}
\index{linpack,CCHDD}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CCHDD(R,LDR,P,X,Z,LDZ,NZ,Y,RHO,C,S,INFO)
      INTEGER LDR,P,LDZ,NZ,INFO
      COMPLEX R(LDR,1),X(1),Z(LDZ,1),Y(1),S(1)
      REAL RHO(1),C(1)
 
      CCHDD DOWNDATES AN AUGMENTED CHOLESKY DECOMPOSITION OR THE
      TRIANGULAR FACTOR OF AN AUGMENTED QR DECOMPOSITION.
      SPECIFICALLY, GIVEN AN UPPER TRIANGULAR MATRIX R OF ORDER P,  A
      ROW VECTOR X, A COLUMN VECTOR Z, AND A SCALAR Y, CCHDD
      DETERMINEDS A UNITARY MATRIX U AND A SCALAR ZETA SUCH THAT
 
                         (R   Z )     (RR  ZZ)
                     U * (      )  =  (      ) ,
                         (0 ZETA)     ( X   Y)
 
      WHERE RR IS UPPER TRIANGULAR.  IF R AND Z HAVE BEEN OBTAINED
      FROM THE FACTORIZATION OF A LEAST SQUARES PROBLEM, THEN
      RR AND ZZ ARE THE FACTORS CORRESPONDING TO THE PROBLEM
      WITH THE OBSERVATION (X,Y) REMOVED.  IN THIS CASE, IF RHO
      IS THE NORM OF THE RESIDUAL VECTOR, THEN THE NORM OF
      THE RESIDUAL VECTOR OF THE DOWNDATED PROBLEM IS
      SQRT(RHO**2 - ZETA**2). CCHDD WILL SIMULTANEOUSLY DOWNDATE
      SEVERAL TRIPLETS (Z,Y,RHO) ALONG WITH R.
      FOR A LESS TERSE DESCRIPTION OF WHAT CCHDD DOES AND HOW
      IT MAY BE APPLIED, SEE THE LINPACK GUIDE.
 
      THE MATRIX U IS DETERMINED AS THE PRODUCT U(1)*...*U(P)
      WHERE U(I) IS A ROTATION IN THE (P+1,I)-PLANE OF THE
      FORM
 
                        ( C(I)  -CONJG(S(I)) )
                        (                    ) .
                        ( S(I)       C(I)    )
 
      THE ROTATIONS ARE CHOSEN SO THAT C(I) IS REAL.
 
      THE USER IS WARNED THAT A GIVEN DOWNDATING PROBLEM MAY
      BE IMPOSSIBLE TO ACCOMPLISH OR MAY PRODUCE
      INACCURATE RESULTS.  FOR EXAMPLE, THIS CAN HAPPEN
      IF X IS NEAR A VECTOR WHOSE REMOVAL WILL REDUCE THE
      RANK OF R.  BEWARE.
 
      ON ENTRY
 
          R      COMPLEX(LDR,P), WHERE LDR .GE. P.
                 R CONTAINS THE UPPER TRIANGULAR MATRIX
                 THAT IS TO BE DOWNDATED.  THE PART OF  R
                 BELOW THE DIAGONAL IS NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION FO THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          X      COMPLEX(P).
                 X CONTAINS THE ROW VECTOR THAT IS TO
                 BE REMOVED FROM R.  X IS NOT ALTERED BY CCHDD.
 
          Z      COMPLEX(LDZ,NZ), WHERE LDZ .GE. P.
                 Z IS AN ARRAY OF NZ P-VECTORS WHICH
                 ARE TO BE DOWNDATED ALONG WITH R.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF VECTORS TO BE DOWNDATED
                 NZ MAY BE ZERO, IN WHICH CASE Z, Y, AND RHO
                 ARE NOT REFERENCED.
 
          Y      COMPLEX(NZ).
                 Y CONTAINS THE SCALARS FOR THE DOWNDATING
                 OF THE VECTORS Z.  Y IS NOT ALTERED BY CCHDD.
 
          RHO    REAL(NZ).
                 RHO CONTAINS THE NORMS OF THE RESIDUAL
                 VECTORS THAT ARE TO BE DOWNDATED.
 
      ON RETURN
 
          R
          Z      CONTAIN THE DOWNDATED QUANTITIES.
          RHO
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING
                 ROTATIONS.
 
          S      COMPLEX(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING
                 ROTATIONS.
 
          INFO   INTEGER.
                 INFO IS SET AS FOLLOWS.
 
                    INFO = 0  IF THE ENTIRE DOWNDATING
                              WAS SUCCESSFUL.
 
                    INFO =-1  IF R COULD NOT BE DOWNDATED.
                              IN THIS CASE, ALL QUANTITIES
                              ARE LEFT UNALTERED.
 
                    INFO = 1  IF SOME RHO COULD NOT BE
                              DOWNDATED.  THE OFFENDING RHOS ARE
                              SET TO -1.
 
\end{verbatim}}
\section{CCHEX}
\index{linpack,CCHEX}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CCHEX(R,LDR,P,K,L,Z,LDZ,NZ,C,S,JOB)
      INTEGER LDR,P,K,L,LDZ,NZ,JOB
      COMPLEX R(LDR,1),Z(LDZ,1),S(1)
      REAL C(1)
 
      CCHEX UPDATES THE CHOLESKY FACTORIZATION
 
                    A = CTRANS(R)*R
 
      OF A POSITIVE DEFINITE MATRIX A OF ORDER P UNDER DIAGONAL
      PERMUTATIONS OF THE FORM
 
                    TRANS(E)*A*E
 
      WHERE E IS A PERMUTATION MATRIX.  SPECIFICALLY, GIVEN
      AN UPPER TRIANGULAR MATRIX R AND A PERMUTATION MATRIX
      E (WHICH IS SPECIFIED BY K, L, AND JOB), CCHEX DETERMINES
      A UNITARY MATRIX U SUCH THAT
 
                            U*R*E = RR,
 
      WHERE RR IS UPPER TRIANGULAR.  AT THE USERS OPTION, THE
      TRANSFORMATION U WILL BE MULTIPLIED INTO THE ARRAY Z.
      IF A = CTRANS(X)*X, SO THAT R IS THE TRIANGULAR PART OF THE
      QR FACTORIZATION OF X, THEN RR IS THE TRIANGULAR PART OF THE
      QR FACTORIZATION OF X*E, I.E. X WITH ITS COLUMNS PERMUTED.
      FOR A LESS TERSE DESCRIPTION OF WHAT CCHEX DOES AND HOW
      IT MAY BE APPLIED, SEE THE LINPACK GUIDE.
 
      THE MATRIX Q IS DETERMINED AS THE PRODUCT U(L-K)*...*U(1)
      OF PLANE ROTATIONS OF THE FORM
 
                            (    C(I)       S(I) )
                            (                    ) ,
                            ( -CONJG(S(I))  C(I) )
 
      WHERE C(I) IS REAL, THE ROWS THESE ROTATIONS OPERATE ON
      ARE DESCRIBED BELOW.
 
      THERE ARE TWO TYPES OF PERMUTATIONS, WHICH ARE DETERMINED
      BY THE VALUE OF JOB.
 
      1. RIGHT CIRCULAR SHIFT (JOB = 1).
 
          THE COLUMNS ARE REARRANGED IN THE FOLLOWING ORDER.
 
                 1,...,K-1,L,K,K+1,...,L-1,L+1,...,P.
 
          U IS THE PRODUCT OF L-K ROTATIONS U(I), WHERE U(I)
          ACTS IN THE (L-I,L-I+1)-PLANE.
 
      2. LEFT CIRCULAR SHIFT (JOB = 2).
          THE COLUMNS ARE REARRANGED IN THE FOLLOWING ORDER
 
                 1,...,K-1,K+1,K+2,...,L,K,L+1,...,P.
 
          U IS THE PRODUCT OF L-K ROTATIONS U(I), WHERE U(I)
          ACTS IN THE (K+I-1,K+I)-PLANE.
 
      ON ENTRY
 
          R      COMPLEX(LDR,P), WHERE LDR.GE.P.
                 R CONTAINS THE UPPER TRIANGULAR FACTOR
                 THAT IS TO BE UPDATED.  ELEMENTS OF R
                 BELOW THE DIAGONAL ARE NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION OF THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          K      INTEGER.
                 K IS THE FIRST COLUMN TO BE PERMUTED.
 
          L      INTEGER.
                 L IS THE LAST COLUMN TO BE PERMUTED.
                 L MUST BE STRICTLY GREATER THAN K.
 
          Z      COMPLEX(LDZ,NZ), WHERE LDZ.GE.P.
                 Z IS AN ARRAY OF NZ P-VECTORS INTO WHICH THE
                 TRANSFORMATION U IS MULTIPLIED.  Z IS
                 NOT REFERENCED IF NZ = 0.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF COLUMNS OF THE MATRIX Z.
 
          JOB    INTEGER.
                 JOB DETERMINES THE TYPE OF PERMUTATION.
                        JOB = 1  RIGHT CIRCULAR SHIFT.
                        JOB = 2  LEFT CIRCULAR SHIFT.
 
      ON RETURN
 
          R      CONTAINS THE UPDATED FACTOR.
 
          Z      CONTAINS THE UPDATED MATRIX Z.
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING ROTATIONS.
 
          S      COMPLEX(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING ROTATIONS.
 
\end{verbatim}}
\section{CCHUD}
\index{linpack,CCHUD}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CCHUD(R,LDR,P,X,Z,LDZ,NZ,Y,RHO,C,S)
      INTEGER LDR,P,LDZ,NZ
      REAL RHO(1),C(1)
      COMPLEX R(LDR,1),X(1),Z(LDZ,1),Y(1),S(1)
 
      CCHUD UPDATES AN AUGMENTED CHOLESKY DECOMPOSITION OF THE
      TRIANGULAR PART OF AN AUGMENTED QR DECOMPOSITION.  SPECIFICALLY,
      GIVEN AN UPPER TRIANGULAR MATRIX R OF ORDER P, A ROW VECTOR
      X, A COLUMN VECTOR Z, AND A SCALAR Y, CCHUD DETERMINES A
      UNTIARY MATRIX U AND A SCALAR ZETA SUCH THAT
 
 
                               (R  Z)     (RR   ZZ )
                          U  * (    )  =  (        ) ,
                               (X  Y)     ( 0  ZETA)
 
      WHERE RR IS UPPER TRIANGULAR.  IF R AND Z HAVE BEEN
      OBTAINED FROM THE FACTORIZATION OF A LEAST SQUARES
      PROBLEM, THEN RR AND ZZ ARE THE FACTORS CORRESPONDING TO
      THE PROBLEM WITH THE OBSERVATION (X,Y) APPENDED.  IN THIS
      CASE, IF RHO IS THE NORM OF THE RESIDUAL VECTOR, THEN THE
      NORM OF THE RESIDUAL VECTOR OF THE UPDATED PROBLEM IS
      SQRT(RHO**2 + ZETA**2).  CCHUD WILL SIMULTANEOUSLY UPDATE
      SEVERAL TRIPLETS (Z,Y,RHO).
      FOR A LESS TERSE DESCRIPTION OF WHAT CCHUD DOES AND HOW
      IT MAY BE APPLIED SEE THE LINPACK GUIDE.
 
      THE MATRIX U IS DETERMINED AS THE PRODUCT U(P)*...*U(1),
      WHERE U(I) IS A ROTATION IN THE (I,P+1) PLANE OF THE
      FORM
 
                        (     C(I)      S(I) )
                        (                    ) .
                        ( -CONJG(S(I))  C(I) )
 
      THE ROTATIONS ARE CHOSEN SO THAT C(I) IS REAL.
 
      ON ENTRY
 
          R      COMPLEX(LDR,P), WHERE LDR .GE. P.
                 R CONTAINS THE UPPER TRIANGULAR MATRIX
                 THAT IS TO BE UPDATED.  THE PART OF R
                 BELOW THE DIAGONAL IS NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION OF THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          X      COMPLEX(P).
                 X CONTAINS THE ROW TO BE ADDED TO R.  X IS
                 NOT ALTERED BY CCHUD.
 
          Z      COMPLEX(LDZ,NZ), WHERE LDZ .GE. P.
                 Z IS AN ARRAY CONTAINING NZ P-VECTORS TO
                 BE UPDATED WITH R.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF VECTORS TO BE UPDATED
                 NZ MAY BE ZERO, IN WHICH CASE Z, Y, AND RHO
                 ARE NOT REFERENCED.
 
          Y      COMPLEX(NZ).
                 Y CONTAINS THE SCALARS FOR UPDATING THE VECTORS
                 Z.  Y IS NOT ALTERED BY CCHUD.
 
          RHO    REAL(NZ).
                 RHO CONTAINS THE NORMS OF THE RESIDUAL
                 VECTORS THAT ARE TO BE UPDATED.  IF RHO(J)
                 IS NEGATIVE, IT IS LEFT UNALTERED.
 
      ON RETURN
 
          RC
          RHO    CONTAIN THE UPDATED QUANTITIES.
          Z
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING
                 ROTATIONS.
 
          S      COMPLEX(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING
                 ROTATIONS.
\end{verbatim}}
\section{CCOPY}
\index{blas,CCOPY}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  CCOPY(N,CX,INCX,CY,INCY)
 
      COPIES A VECTOR, X, TO A VECTOR, Y.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CDOTC}
\index{blas,CDOTC}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      COMPLEX FUNCTION CDOTC(N,CX,INCX,CY,INCY)
 
      FORMS THE DOT PRODUCT OF TWO VECTORS, CONJUGATING THE FIRST
      VECTOR.
      JACK DONGARRA, LINPACK,  3/11/78.
 
\end{verbatim}}
\section{CDOTU}
\index{blas,CDOTU}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      COMPLEX FUNCTION CDOTU(N,CX,INCX,CY,INCY)
 
      FORMS THE DOT PRODUCT OF TWO VECTORS.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CGBCO}
\index{linpack,CGBCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)
      INTEGER LDA,N,ML,MU,IPVT(1)
      COMPLEX ABD(LDA,1),Z(1)
      REAL RCOND
 
      CGBCO FACTORS A COMPLEX BAND MATRIX BY GAUSSIAN
      ELIMINATION AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CGBFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CGBCO BY CGBSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CGBCO BY CGBSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CGBCO BY CGBDI.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS
                 OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND
                 THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS
                 ML+1 THROUGH 2*ML+MU+1 OF  ABD .
                 SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. 2*ML + MU + 1 .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
                 0 .LE. ML .LT. N .
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. MU .LT. N .
                 MORE EFFICIENT IF  ML .LE. MU .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND
                 THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      BAND STORAGE
 
            IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT
            WILL SET UP THE INPUT.
 
                    ML = (BAND WIDTH BELOW THE DIAGONAL)
                    MU = (BAND WIDTH ABOVE THE DIAGONAL)
                    M = ML + MU + 1
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-MU)
                       I2 = MIN0(N, J+ML)
                       DO 10 I = I1, I2
                          K = I - J + M
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .
            IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR
            ELEMENTS GENERATED DURING THE TRIANGULARIZATION.
            THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .
            THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE
            ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.
 
      EXAMPLE..  IF THE ORIGINAL MATRIX IS
 
            11 12 13  0  0  0
            21 22 23 24  0  0
             0 32 33 34 35  0
             0  0 43 44 45 46
             0  0  0 54 55 56
             0  0  0  0 65 66
 
       THEN  N = 6, ML = 1, MU = 2, LDA .GE. 5  AND ABD SHOULD CONTAIN
 
             *  *  *  +  +  +  , * = NOT USED
             *  * 13 24 35 46  , + = USED FOR PIVOTING
             * 12 23 34 45 56
            11 22 33 44 55 66
            21 32 43 54 65  *
\end{verbatim}}
\section{CGBDI}
\index{linpack,CGBDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGBDI(ABD,LDA,N,ML,MU,IPVT,DET)
      INTEGER LDA,N,ML,MU,IPVT(1)
      COMPLEX ABD(LDA,1),DET(2)
 
      CGBDI COMPUTES THE DETERMINANT OF A BAND MATRIX
      USING THE FACTORS COMPUTED BY CGBCO OR CGBFA.
      IF THE INVERSE IS NEEDED, USE CGBSL  N  TIMES.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE OUTPUT FROM CGBCO OR CGBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CGBCO OR CGBFA.
 
      ON RETURN
 
         DET     COMPLEX(2)
                 DETERMINANT OF ORIGINAL MATRIX.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. CABS1(DET(1)) .LT. 10.0
                 OR  DET(1) = 0.0 .
 
\end{verbatim}}
\section{CGBFA}
\index{linpack,CGBFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGBFA(ABD,LDA,N,ML,MU,IPVT,INFO)
      INTEGER LDA,N,ML,MU,IPVT(1),INFO
      COMPLEX ABD(LDA,1)
 
      CGBFA FACTORS A COMPLEX BAND MATRIX BY ELIMINATION.
 
      CGBFA IS USUALLY CALLED BY CGBCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS
                 OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND
                 THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS
                 ML+1 THROUGH 2*ML+MU+1 OF  ABD .
                 SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. 2*ML + MU + 1 .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
                 0 .LE. ML .LT. N .
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. MU .LT. N .
                 MORE EFFICIENT IF  ML .LE. MU .
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND
                 THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR
                      CONDITION FOR THIS SUBROUTINE, BUT IT DOES
                      INDICATE THAT CGBSL WILL DIVIDE BY ZERO IF
                      CALLED.  USE  RCOND  IN CGBCO FOR A RELIABLE
                      INDICATION OF SINGULARITY.
 
      BAND STORAGE
 
            IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT
            WILL SET UP THE INPUT.
 
                    ML = (BAND WIDTH BELOW THE DIAGONAL)
                    MU = (BAND WIDTH ABOVE THE DIAGONAL)
                    M = ML + MU + 1
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-MU)
                       I2 = MIN0(N, J+ML)
                       DO 10 I = I1, I2
                          K = I - J + M
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .
            IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR
            ELEMENTS GENERATED DURING THE TRIANGULARIZATION.
            THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .
            THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE
            ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.
 
\end{verbatim}}
\section{CGBSL}
\index{linpack,CGBSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGBSL(ABD,LDA,N,ML,MU,IPVT,B,JOB)
      INTEGER LDA,N,ML,MU,IPVT(1),JOB
      COMPLEX ABD(LDA,1),B(1)
 
      CGBSL SOLVES THE COMPLEX BAND SYSTEM
      A * X = B  OR  CTRANS(A) * X = B
      USING THE FACTORS COMPUTED BY CGBCO OR CGBFA.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE OUTPUT FROM CGBCO OR CGBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CGBCO OR CGBFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
         JOB     INTEGER
                 = 0         TO SOLVE  A*X = B ,
                 = NONZERO   TO SOLVE  CTRANS(A)*X = B , WHERE
                             CTRANS(A)  IS THE CONJUGATE TRANSPOSE.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A
         ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY
         BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER
         SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE
         CALLED CORRECTLY AND IF CGBCO HAS SET RCOND .GT. 0.0
         OR CGBFA HAS SET INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)
            IF (RCOND IS TOO SMALL) GO TO ...
            DO 10 J = 1, P
               CALL CGBSL(ABD,LDA,N,ML,MU,IPVT,C(1,J),0)
         10 CONTINUE
 
\end{verbatim}}
\section{CGECO}
\index{linpack,CGECO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGECO(A,LDA,N,IPVT,RCOND,Z)
      INTEGER LDA,N,IPVT(1)
      COMPLEX A(LDA,1),Z(1)
      REAL RCOND
 
      CGECO FACTORS A COMPLEX MATRIX BY GAUSSIAN ELIMINATION
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CGEFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CGECO BY CGESL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CGECO BY CGESL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CGECO BY CGEDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CGECO BY CGEDI.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE MATRIX TO BE FACTORED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS
                 WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{CGEDI}
\index{linpack,CGEDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGEDI(A,LDA,N,IPVT,DET,WORK,JOB)
      INTEGER LDA,N,IPVT(1),JOB
      COMPLEX A(LDA,1),DET(2),WORK(1)
 
      CGEDI COMPUTES THE DETERMINANT AND INVERSE OF A MATRIX
      USING THE FACTORS COMPUTED BY CGECO OR CGEFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE OUTPUT FROM CGECO OR CGEFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CGECO OR CGEFA.
 
         WORK    COMPLEX(N)
                 WORK VECTOR.  CONTENTS DESTROYED.
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         A       INVERSE OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE UNCHANGED.
 
         DET     COMPLEX(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. CABS1(DET(1)) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF CGECO HAS SET RCOND .GT. 0.0 OR CGEFA HAS SET
         INFO .EQ. 0 .
 
\end{verbatim}}
\section{CGEFA}
\index{linpack,CGEFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGEFA(A,LDA,N,IPVT,INFO)
      INTEGER LDA,N,IPVT(1),INFO
      COMPLEX A(LDA,1)
 
      CGEFA FACTORS A COMPLEX MATRIX BY GAUSSIAN ELIMINATION.
 
      CGEFA IS USUALLY CALLED BY CGECO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR CGECO) = (1 + 9/N)*(TIME FOR CGEFA) .
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE MATRIX TO BE FACTORED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS
                 WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR
                      CONDITION FOR THIS SUBROUTINE, BUT IT DOES
                      INDICATE THAT CGESL OR CGEDI WILL DIVIDE BY ZERO
                      IF CALLED.  USE  RCOND  IN CGECO FOR A RELIABLE
                      INDICATION OF SINGULARITY.
 
\end{verbatim}}
\section{CGESL}
\index{linpack,CGESL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGESL(A,LDA,N,IPVT,B,JOB)
      INTEGER LDA,N,IPVT(1),JOB
      COMPLEX A(LDA,1),B(1)
 
      CGESL SOLVES THE COMPLEX SYSTEM
      A * X = B  OR  CTRANS(A) * X = B
      USING THE FACTORS COMPUTED BY CGECO OR CGEFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE OUTPUT FROM CGECO OR CGEFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CGECO OR CGEFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
         JOB     INTEGER
                 = 0         TO SOLVE  A*X = B ,
                 = NONZERO   TO SOLVE  CTRANS(A)*X = B  WHERE
                             CTRANS(A)  IS THE CONJUGATE TRANSPOSE.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A
         ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY
         BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER
         SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE
         CALLED CORRECTLY AND IF CGECO HAS SET RCOND .GT. 0.0
         OR CGEFA HAS SET INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CGECO(A,LDA,N,IPVT,RCOND,Z)
            IF (RCOND IS TOO SMALL) GO TO ...
            DO 10 J = 1, P
               CALL CGESL(A,LDA,N,IPVT,C(1,J),0)
         10 CONTINUE
 
\end{verbatim}}
\section{CGTSL}
\index{linpack,CGTSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CGTSL(N,C,D,E,B,INFO)
      INTEGER N,INFO
      COMPLEX C(1),D(1),E(1),B(1)
 
      CGTSL GIVEN A GENERAL TRIDIAGONAL MATRIX AND A RIGHT HAND
      SIDE WILL FIND THE SOLUTION.
 
      ON ENTRY
 
         N       INTEGER
                 IS THE ORDER OF THE TRIDIAGONAL MATRIX.
 
         C       COMPLEX(N)
                 IS THE SUBDIAGONAL OF THE TRIDIAGONAL MATRIX.
                 C(2) THROUGH C(N) SHOULD CONTAIN THE SUBDIAGONAL.
                 ON OUTPUT C IS DESTROYED.
 
         D       COMPLEX(N)
                 IS THE DIAGONAL OF THE TRIDIAGONAL MATRIX.
                 ON OUTPUT D IS DESTROYED.
 
         E       COMPLEX(N)
                 IS THE SUPERDIAGONAL OF THE TRIDIAGONAL MATRIX.
                 E(1) THROUGH E(N-1) SHOULD CONTAIN THE SUPERDIAGONAL.
                 ON OUTPUT E IS DESTROYED.
 
         B       COMPLEX(N)
                 IS THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       IS THE SOLUTION VECTOR.
 
         INFO    INTEGER
                 = 0 NORMAL VALUE.
                 = K IF THE K-TH ELEMENT OF THE DIAGONAL BECOMES
                     EXACTLY ZERO.  THE SUBROUTINE RETURNS WHEN
                     THIS IS DETECTED.
 
\end{verbatim}}
\section{CHICO}
\index{linpack,CHICO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHICO(A,LDA,N,KPVT,RCOND,Z)
      INTEGER LDA,N,KPVT(1)
      COMPLEX A(LDA,1),Z(1)
      REAL RCOND
 
      CHICO FACTORS A COMPLEX HERMITIAN MATRIX BY ELIMINATION WITH
      SYMMETRIC PIVOTING AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CHIFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CHICO BY CHISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CHICO BY CHISL.
      TO COMPUTE  INVERSE(A) , FOLLOW CHICO BY CHIDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CHICO BY CHIDI.
      TO COMPUTE  INERTIA(A), FOLLOW CHICO BY CHIDI.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE HERMITIAN MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*CTRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , CTRANS(U) IS THE
                 CONJUGATE TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{CHIDI}
\index{linpack,CHIDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHIDI(A,LDA,N,KPVT,DET,INERT,WORK,JOB)
      INTEGER LDA,N,JOB
      COMPLEX A(LDA,1),WORK(1)
      REAL DET(2)
      INTEGER KPVT(1),INERT(3)
 
      CHIDI COMPUTES THE DETERMINANT, INERTIA AND INVERSE
      OF A COMPLEX HERMITIAN MATRIX USING THE FACTORS FROM CHIFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE OUTPUT FROM CHIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY A.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CHIFA.
 
         WORK    COMPLEX(N)
                 WORK VECTOR.  CONTENTS DESTROYED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  ABC  WHERE
                    IF  C .NE. 0, THE INVERSE IS COMPUTED,
                    IF  B .NE. 0, THE DETERMINANT IS COMPUTED,
                    IF  A .NE. 0, THE INERTIA IS COMPUTED.
 
                 FOR EXAMPLE, JOB = 111  GIVES ALL THREE.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         A      CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX.  THE STRICT LOWER TRIANGLE
                IS NEVER REFERENCED.
 
         DET    REAL(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
         INERT  INTEGER(3)
                THE INERTIA OF THE ORIGINAL MATRIX.
                INERT(1)  =  NUMBER OF POSITIVE EIGENVALUES.
                INERT(2)  =  NUMBER OF NEGATIVE EIGENVALUES.
                INERT(3)  =  NUMBER OF ZERO EIGENVALUES.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF THE INVERSE IS REQUESTED
         AND  CHICO  HAS SET RCOND .EQ. 0.0
         OR  CHIFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{CHIFA}
\index{linpack,CHIFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHIFA(A,LDA,N,KPVT,INFO)
      INTEGER LDA,N,KPVT(1),INFO
      COMPLEX A(LDA,1)
 
      CHIFA FACTORS A COMPLEX HERMITIAN MATRIX BY ELIMINATION
      WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW CHIFA BY CHISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CHIFA BY CHISL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CHIFA BY CHIDI.
      TO COMPUTE  INERTIA(A) , FOLLOW CHIFA BY CHIDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CHIFA BY CHIDI.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE HERMITIAN MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*CTRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , CTRANS(U) IS THE
                 CONJUGATE TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT CHISL OR CHIDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
\end{verbatim}}
\section{CHISL}
\index{linpack,CHISL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHISL(A,LDA,N,KPVT,B)
      INTEGER LDA,N,KPVT(1)
      COMPLEX A(LDA,1),B(1)
 
      CHISL SOLVES THE COMPLEX HERMITIAN SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CHIFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE OUTPUT FROM CHIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CHIFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  CHICO  HAS SET RCOND .EQ. 0.0
         OR  CHIFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CHIFA(A,LDA,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CHISL(A,LDA,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CHPCO}
\index{linpack,CHPCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHPCO(AP,N,KPVT,RCOND,Z)
      INTEGER N,KPVT(1)
      COMPLEX AP(1),Z(1)
      REAL RCOND
 
      CHPCO FACTORS A COMPLEX HERMITIAN MATRIX STORED IN PACKED
      FORM BY ELIMINATION WITH SYMMETRIC PIVOTING AND ESTIMATES
      THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CHPFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CHPCO BY CHPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CHPCO BY CHPSL.
      TO COMPUTE  INVERSE(A) , FOLLOW CHPCO BY CHPDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CHPCO BY CHPDI.
      TO COMPUTE  INERTIA(A), FOLLOW CHPCO BY CHPDI.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A HERMITIAN MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*CTRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , CTRANS(U) IS THE
                 CONJUGATE TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A HERMITIAN MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CHPDI}
\index{linpack,CHPDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHPDI(AP,N,KPVT,DET,INERT,WORK,JOB)
      INTEGER N,JOB
      COMPLEX AP(1),WORK(1)
      REAL DET(2)
      INTEGER KPVT(1),INERT(3)
 
      CHPDI COMPUTES THE DETERMINANT, INERTIA AND INVERSE
      OF A COMPLEX HERMITIAN MATRIX USING THE FACTORS FROM CHPFA,
      WHERE THE MATRIX IS STORED IN PACKED FORM.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE OUTPUT FROM CHPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CHPFA.
 
         WORK    COMPLEX(N)
                 WORK VECTOR.  CONTENTS IGNORED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  ABC  WHERE
                    IF  C .NE. 0, THE INVERSE IS COMPUTED,
                    IF  B .NE. 0, THE DETERMINANT IS COMPUTED,
                    IF  A .NE. 0, THE INERTIA IS COMPUTED.
 
                 FOR EXAMPLE, JOB = 111  GIVES ALL THREE.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         AP     CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX, STORED IN PACKED FORM.
                THE COLUMNS OF THE UPPER TRIANGLE ARE STORED
                SEQUENTIALLY IN A ONE-DIMENSIONAL ARRAY.
 
         DET    REAL(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
         INERT  INTEGER(3)
                THE INERTIA OF THE ORIGINAL MATRIX.
                INERT(1)  =  NUMBER OF POSITIVE EIGENVALUES.
                INERT(2)  =  NUMBER OF NEGATIVE EIGENVALUES.
                INERT(3)  =  NUMBER OF ZERO EIGENVALUES.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INVERSE IS REQUESTED
         AND  CHPCO  HAS SET RCOND .EQ. 0.0
         OR  CHPFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{CHPFA}
\index{linpack,CHPFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHPFA(AP,N,KPVT,INFO)
      INTEGER N,KPVT(1),INFO
      COMPLEX AP(1)
 
      CHPFA FACTORS A COMPLEX HERMITIAN MATRIX STORED IN
      PACKED FORM BY ELIMINATION WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW CHPFA BY CHPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CHPFA BY CHPSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CHPFA BY CHPDI.
      TO COMPUTE  INERTIA(A) , FOLLOW CHPFA BY CHPDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CHPFA BY CHPDI.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A HERMITIAN MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*CTRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , CTRANS(U) IS THE
                 CONJUGATE TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT CHPSL OR CHPDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A HERMITIAN MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K)  = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CHPSL}
\index{linpack,CHPSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CHPSL(AP,N,KPVT,B)
      INTEGER N,KPVT(1)
      COMPLEX AP(1),B(1)
 
      CHISL SOLVES THE COMPLEX HERMITIAN SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CHPFA.
 
      ON ENTRY
 
         AP      COMPLEX(N*(N+1)/2)
                 THE OUTPUT FROM CHPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CHPFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  CHPCO  HAS SET RCOND .EQ. 0.0
         OR  CHPFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CHPFA(AP,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CHPSL(AP,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CMACH}
\index{blas,CMACH}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      REAL FUNCTION CMACH(JOB)
      INTEGER JOB
 
      SMACH COMPUTES MACHINE PARAMETERS OF FLOATING POINT
      ARITHMETIC FOR USE IN TESTING ONLY.  NOT REQUIRED BY
      LINPACK PROPER.
 
      IF TROUBLE WITH AUTOMATIC COMPUTATION OF THESE QUANTITIES,
      THEY CAN BE SET BY DIRECT ASSIGNMENT STATEMENTS.
      ASSUME THE COMPUTER HAS
 
         B = BASE OF ARITHMETIC
         T = NUMBER OF BASE  B  DIGITS
         L = SMALLEST POSSIBLE EXPONENT
         U = LARGEST POSSIBLE EXPONENT
 
      THEN
 
         EPS = B**(1-T)
         TINY = 100.0*B**(-L+T)
         HUGE = 0.01*B**(U-T)
 
      DMACH SAME AS SMACH EXCEPT T, L, U APPLY TO
      DOUBLE PRECISION.
 
      CMACH SAME AS SMACH EXCEPT IF COMPLEX DIVISION
      IS DONE BY
 
         1/(X+I*Y) = (X-I*Y)/(X**2+Y**2)
 
      THEN
 
         TINY = SQRT(TINY)
         HUGE = SQRT(HUGE)
 
 
      JOB IS 1, 2 OR 3 FOR EPSILON, TINY AND HUGE, RESPECTIVELY.
 
\end{verbatim}}
\section{CPBCO}
\index{linpack,CPBCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPBCO(ABD,LDA,N,M,RCOND,Z,INFO)
      INTEGER LDA,N,M,INFO
      COMPLEX ABD(LDA,1),Z(1)
      REAL RCOND
 
      CPBCO FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      STORED IN BAND FORM AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CPBFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CPBCO BY CPBSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CPBCO BY CPBSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CPBCO BY CPBDI.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE MATRIX TO BE FACTORED.  THE COLUMNS OF THE UPPER
                 TRIANGLE ARE STORED IN THE COLUMNS OF ABD AND THE
                 DIAGONALS OF THE UPPER TRIANGLE ARE STORED IN THE
                 ROWS OF ABD .  SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. M + 1 .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. M .LT. N .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX  R , STORED IN BAND
                 FORM, SO THAT  A = CTRANS(R)*R .
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS SINGULAR TO WORKING PRECISION, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
      BAND STORAGE
 
            IF  A  IS A HERMITIAN POSITIVE DEFINITE BAND MATRIX,
            THE FOLLOWING PROGRAM SEGMENT WILL SET UP THE INPUT.
 
                    M = (BAND WIDTH ABOVE DIAGONAL)
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-M)
                       DO 10 I = I1, J
                          K = I-J+M+1
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES  M + 1  ROWS OF  A , EXCEPT FOR THE  M BY M
            UPPER LEFT TRIANGLE, WHICH IS IGNORED.
 
      EXAMPLE..  IF THE ORIGINAL MATRIX IS
 
            11 12 13  0  0  0
            12 22 23 24  0  0
            13 23 33 34 35  0
             0 24 34 44 45 46
             0  0 35 45 55 56
             0  0  0 46 56 66
 
      THEN  N = 6 , M = 2  AND  ABD  SHOULD CONTAIN
 
             *  * 13 24 35 46
             * 12 23 34 45 56
            11 22 33 44 55 66
 
\end{verbatim}}
\section{CPBDI}
\index{linpack,CPBDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPBDI(ABD,LDA,N,M,DET)
      INTEGER LDA,N,M
      COMPLEX ABD(LDA,1)
      REAL DET(2)
 
      CPBDI COMPUTES THE DETERMINANT
      OF A COMPLEX HERMITIAN POSITIVE DEFINITE BAND MATRIX
      USING THE FACTORS COMPUTED BY CPBCO OR CPBFA.
      IF THE INVERSE IS NEEDED, USE CPBSL  N  TIMES.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE OUTPUT FROM CPBCO OR CPBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
      ON RETURN
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IN THE FORM
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
\end{verbatim}}
\section{CPBFA}
\index{linpack,CPBFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPBFA(ABD,LDA,N,M,INFO)
      INTEGER LDA,N,M,INFO
      COMPLEX ABD(LDA,1)
 
      CPBFA FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      STORED IN BAND FORM.
 
      CPBFA IS USUALLY CALLED BY CPBCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE MATRIX TO BE FACTORED.  THE COLUMNS OF THE UPPER
                 TRIANGLE ARE STORED IN THE COLUMNS OF ABD AND THE
                 DIAGONALS OF THE UPPER TRIANGLE ARE STORED IN THE
                 ROWS OF ABD .  SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. M + 1 .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. M .LT. N .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX  R , STORED IN BAND
                 FORM, SO THAT  A = CTRANS(R)*R .
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  IF THE LEADING MINOR OF ORDER  K  IS NOT
                      POSITIVE DEFINITE.
 
      BAND STORAGE
 
            IF  A  IS A HERMITIAN POSITIVE DEFINITE BAND MATRIX,
            THE FOLLOWING PROGRAM SEGMENT WILL SET UP THE INPUT.
 
                    M = (BAND WIDTH ABOVE DIAGONAL)
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-M)
                       DO 10 I = I1, J
                          K = I-J+M+1
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
\end{verbatim}}
\section{CPBSL}
\index{linpack,CPBSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPBSL(ABD,LDA,N,M,B)
      INTEGER LDA,N,M
      COMPLEX ABD(LDA,1),B(1)
 
      CPBSL SOLVES THE COMPLEX HERMITIAN POSITIVE DEFINITE BAND
      SYSTEM  A*X = B
      USING THE FACTORS COMPUTED BY CPBCO OR CPBFA.
 
      ON ENTRY
 
         ABD     COMPLEX(LDA, N)
                 THE OUTPUT FROM CPBCO OR CPBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CPBCO(ABD,LDA,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CPBSL(ABD,LDA,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CPOCO}
\index{linpack,CPOCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPOCO(A,LDA,N,RCOND,Z,INFO)
      INTEGER LDA,N,INFO
      COMPLEX A(LDA,1),Z(1)
      REAL RCOND
 
      CPOCO FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CPOFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CPOCO BY CPOSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CPOCO BY CPOSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CPOCO BY CPODI.
      TO COMPUTE  INVERSE(A) , FOLLOW CPOCO BY CPODI.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE HERMITIAN MATRIX TO BE FACTORED.  ONLY THE
                 DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX  R  SO THAT  A =
                 CTRANS(R)*R WHERE  CTRANS(R)  IS THE CONJUGATE
                 TRANSPOSE.  THE STRICT LOWER TRIANGLE IS UNALTERED.
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
\end{verbatim}}
\section{CPODI}
\index{linpack,CPODI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPODI(A,LDA,N,DET,JOB)
      INTEGER LDA,N,JOB
      COMPLEX A(LDA,1)
      REAL DET(2)
 
      CPODI COMPUTES THE DETERMINANT AND INVERSE OF A CERTAIN
      COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX (SEE BELOW)
      USING THE FACTORS COMPUTED BY CPOCO, CPOFA OR CQRDC.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE OUTPUT  A  FROM CPOCO OR CPOFA
                 OR THE OUTPUT  X  FROM CQRDC.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         A       IF CPOCO OR CPOFA WAS USED TO FACTOR  A  THEN
                 CPODI PRODUCES THE UPPER HALF OF INVERSE(A) .
                 IF CQRDC WAS USED TO DECOMPOSE  X  THEN
                 CPODI PRODUCES THE UPPER HALF OF INVERSE(CTRANS(X)*X)
                 WHERE CTRANS(X) IS THE CONJUGATE TRANSPOSE.
                 ELEMENTS OF  A  BELOW THE DIAGONAL ARE UNCHANGED.
                 IF THE UNITS DIGIT OF JOB IS ZERO,  A  IS UNCHANGED.
 
         DET     REAL(2)
                 DETERMINANT OF  A  OR OF  CTRANS(X)*X  IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF CPOCO OR CPOFA HAS SET INFO .EQ. 0 .
\end{verbatim}}
\section{CPOFA}
\index{linpack,CPOFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPOFA(A,LDA,N,INFO)
      INTEGER LDA,N,INFO
      COMPLEX A(LDA,1)
 
      CPOFA FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX.
 
      CPOFA IS USUALLY CALLED BY CPOCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR CPOCO) = (1 + 18/N)*(TIME FOR CPOFA) .
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE HERMITIAN MATRIX TO BE FACTORED.  ONLY THE
                 DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX  R  SO THAT  A =
                 CTRANS(R)*R WHERE  CTRANS(R)  IS THE CONJUGATE
                 TRANSPOSE.  THE STRICT LOWER TRIANGLE IS UNALTERED.
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
\end{verbatim}}
\section{CPOSL}
\index{linpack,CPOSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPOSL(A,LDA,N,B)
      INTEGER LDA,N
      COMPLEX A(LDA,1),B(1)
 
      CPOSL SOLVES THE COMPLEX HERMITIAN POSITIVE DEFINITE SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CPOCO OR CPOFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE OUTPUT FROM CPOCO OR CPOFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CPOCO(A,LDA,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CPOSL(A,LDA,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CPPCO}
\index{linpack,CPPCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPPCO(AP,N,RCOND,Z,INFO)
      INTEGER N,INFO
      COMPLEX AP(1),Z(1)
      REAL RCOND
 
      CPPCO FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      STORED IN PACKED FORM
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CPPFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CPPCO BY CPPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CPPCO BY CPPSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CPPCO BY CPPDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CPPCO BY CPPDI.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A HERMITIAN MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      AN UPPER TRIANGULAR MATRIX  R , STORED IN PACKED
                 FORM, SO THAT  A = CTRANS(R)*R .
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS SINGULAR TO WORKING PRECISION, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A HERMITIAN MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CPPDI}
\index{linpack,CPPDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPPDI(AP,N,DET,JOB)
      INTEGER N,JOB
      COMPLEX AP(1)
      REAL DET(2)
 
      CPPDI COMPUTES THE DETERMINANT AND INVERSE
      OF A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      USING THE FACTORS COMPUTED BY CPPCO OR CPPFA .
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE OUTPUT FROM CPPCO OR CPPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         AP      THE UPPER TRIANGULAR HALF OF THE INVERSE .
                 THE STRICT LOWER TRIANGLE IS UNALTERED.
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF CPOCO OR CPOFA HAS SET INFO .EQ. 0 .
 
\end{verbatim}}
\section{CPPFA}
\index{linpack,CPPFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPPFA(AP,N,INFO)
      INTEGER N,INFO
      COMPLEX AP(1)
 
      CPPFA FACTORS A COMPLEX HERMITIAN POSITIVE DEFINITE MATRIX
      STORED IN PACKED FORM.
 
      CPPFA IS USUALLY CALLED BY CPPCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR CPPCO) = (1 + 18/N)*(TIME FOR CPPFA) .
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A HERMITIAN MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      AN UPPER TRIANGULAR MATRIX  R , STORED IN PACKED
                 FORM, SO THAT  A = CTRANS(R)*R .
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  IF THE LEADING MINOR OF ORDER  K  IS NOT
                      POSITIVE DEFINITE.
 
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A HERMITIAN MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CPPSL}
\index{linpack,CPPSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPPSL(AP,N,B)
      INTEGER N
      COMPLEX AP(1),B(1)
 
      CPPSL SOLVES THE COMPLEX HERMITIAN POSITIVE DEFINITE SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CPPCO OR CPPFA.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE OUTPUT FROM CPPCO OR CPPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CPPCO(AP,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CPPSL(AP,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CPTSL}
\index{linpack,CPTSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CPTSL(N,D,E,B)
      INTEGER N
      COMPLEX D(1),E(1),B(1)
 
      CPTSL GIVEN A POSITIVE DEFINITE TRIDIAGONAL MATRIX AND A RIGHT
      HAND SIDE WILL FIND THE SOLUTION.
 
      ON ENTRY
 
         N        INTEGER
                  IS THE ORDER OF THE TRIDIAGONAL MATRIX.
 
         D        COMPLEX(N)
                  IS THE DIAGONAL OF THE TRIDIAGONAL MATRIX.
                  ON OUTPUT D IS DESTROYED.
 
         E        COMPLEX(N)
                  IS THE OFFDIAGONAL OF THE TRIDIAGONAL MATRIX.
                  E(1) THROUGH E(N-1) SHOULD CONTAIN THE
                  OFFDIAGONAL.
 
         B        COMPLEX(N)
                  IS THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B        CONTAINS THE SOULTION.
 
\end{verbatim}}
\section{CQRDC}
\index{linpack,CQRDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CQRDC(X,LDX,N,P,QRAUX,JPVT,WORK,JOB)
      INTEGER LDX,N,P,JOB
      INTEGER JPVT(1)
      COMPLEX X(LDX,1),QRAUX(1),WORK(1)
 
      CQRDC USES HOUSEHOLDER TRANSFORMATIONS TO COMPUTE THE QR
      FACTORIZATION OF AN N BY P MATRIX X.  COLUMN PIVOTING
      BASED ON THE 2-NORMS OF THE REDUCED COLUMNS MAY BE
      PERFORMED AT THE USERS OPTION.
 
      ON ENTRY
 
         X       COMPLEX(LDX,P), WHERE LDX .GE. N.
                 X CONTAINS THE MATRIX WHOSE DECOMPOSITION IS TO BE
                 COMPUTED.
 
         LDX     INTEGER.
                 LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
         N       INTEGER.
                 N IS THE NUMBER OF ROWS OF THE MATRIX X.
 
         P       INTEGER.
                 P IS THE NUMBER OF COLUMNS OF THE MATRIX X.
 
         JPVT    INTEGER(P).
                 JPVT CONTAINS INTEGERS THAT CONTROL THE SELECTION
                 OF THE PIVOT COLUMNS.  THE K-TH COLUMN X(K) OF X
                 IS PLACED IN ONE OF THREE CLASSES ACCORDING TO THE
                 VALUE OF JPVT(K).
 
                    IF JPVT(K) .GT. 0, THEN X(K) IS AN INITIAL
                                       COLUMN.
 
                    IF JPVT(K) .EQ. 0, THEN X(K) IS A FREE COLUMN.
 
                    IF JPVT(K) .LT. 0, THEN X(K) IS A FINAL COLUMN.
 
                 BEFORE THE DECOMPOSITION IS COMPUTED, INITIAL COLUMNS
                 ARE MOVED TO THE BEGINNING OF THE ARRAY X AND FINAL
                 COLUMNS TO THE END.  BOTH INITIAL AND FINAL COLUMNS
                 ARE FROZEN IN PLACE DURING THE COMPUTATION AND ONLY
                 FREE COLUMNS ARE MOVED.  AT THE K-TH STAGE OF THE
                 REDUCTION, IF X(K) IS OCCUPIED BY A FREE COLUMN
                 IT IS INTERCHANGED WITH THE FREE COLUMN OF LARGEST
                 REDUCED NORM.  JPVT IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         WORK    COMPLEX(P).
                 WORK IS A WORK ARRAY.  WORK IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         JOB     INTEGER.
                 JOB IS AN INTEGER THAT INITIATES COLUMN PIVOTING.
                 IF JOB .EQ. 0, NO PIVOTING IS DONE.
                 IF JOB .NE. 0, PIVOTING IS DONE.
 
      ON RETURN
 
         X       X CONTAINS IN ITS UPPER TRIANGLE THE UPPER
                 TRIANGULAR MATRIX R OF THE QR FACTORIZATION.
                 BELOW ITS DIAGONAL X CONTAINS INFORMATION FROM
                 WHICH THE UNITARY PART OF THE DECOMPOSITION
                 CAN BE RECOVERED.  NOTE THAT IF PIVOTING HAS
                 BEEN REQUESTED, THE DECOMPOSITION IS NOT THAT
                 OF THE ORIGINAL MATRIX X BUT THAT OF X
                 WITH ITS COLUMNS PERMUTED AS DESCRIBED BY JPVT.
 
         QRAUX   COMPLEX(P).
                 QRAUX CONTAINS FURTHER INFORMATION REQUIRED TO RECOVER
                 THE UNITARY PART OF THE DECOMPOSITION.
 
         JPVT    JPVT(K) CONTAINS THE INDEX OF THE COLUMN OF THE
                 ORIGINAL MATRIX THAT HAS BEEN INTERCHANGED INTO
                 THE K-TH COLUMN, IF PIVOTING WAS REQUESTED.
 
\end{verbatim}}
\section{CQRSL}
\index{linpack,CQRSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CQRSL(X,LDX,N,K,QRAUX,Y,QY,QTY,B,RSD,XB,JOB,INFO)
      INTEGER LDX,N,K,JOB,INFO
      COMPLEX X(LDX,1),QRAUX(1),Y(1),QY(1),QTY(1),B(1),RSD(1),XB(1)
 
      CQRSL APPLIES THE OUTPUT OF CQRDC TO COMPUTE COORDINATE
      TRANSFORMATIONS, PROJECTIONS, AND LEAST SQUARES SOLUTIONS.
      FOR K .LE. MIN(N,P), LET XK BE THE MATRIX
 
             XK = (X(JPVT(1)),X(JPVT(2)), ... ,X(JPVT(K)))
 
      FORMED FROM COLUMNNS JPVT(1), ... ,JPVT(K) OF THE ORIGINAL
      N X P MATRIX X THAT WAS INPUT TO CQRDC (IF NO PIVOTING WAS
      DONE, XK CONSISTS OF THE FIRST K COLUMNS OF X IN THEIR
      ORIGINAL ORDER).  CQRDC PRODUCES A FACTORED UNITARY MATRIX Q
      AND AN UPPER TRIANGULAR MATRIX R SUCH THAT
 
               XK = Q * (R)
                        (0)
 
      THIS INFORMATION IS CONTAINED IN CODED FORM IN THE ARRAYS
      X AND QRAUX.
 
      ON ENTRY
 
         X      COMPLEX(LDX,P).
                X CONTAINS THE OUTPUT OF CQRDC.
 
         LDX    INTEGER.
                LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
         N      INTEGER.
                N IS THE NUMBER OF ROWS OF THE MATRIX XK.  IT MUST
                HAVE THE SAME VALUE AS N IN CQRDC.
 
         K      INTEGER.
                K IS THE NUMBER OF COLUMNS OF THE MATRIX XK.  K
                MUST NNOT BE GREATER THAN MIN(N,P), WHERE P IS THE
                SAME AS IN THE CALLING SEQUENCE TO CQRDC.
 
         QRAUX  COMPLEX(P).
                QRAUX CONTAINS THE AUXILIARY OUTPUT FROM CQRDC.
 
         Y      COMPLEX(N)
                Y CONTAINS AN N-VECTOR THAT IS TO BE MANIPULATED
                BY CQRSL.
 
         JOB    INTEGER.
                JOB SPECIFIES WHAT IS TO BE COMPUTED.  JOB HAS
                THE DECIMAL EXPANSION ABCDE, WITH THE FOLLOWING
                MEANING.
 
                     IF A.NE.0, COMPUTE QY.
                     IF B,C,D, OR E .NE. 0, COMPUTE QTY.
                     IF C.NE.0, COMPUTE B.
                     IF D.NE.0, COMPUTE RSD.
                     IF E.NE.0, COMPUTE XB.
 
                NOTE THAT A REQUEST TO COMPUTE B, RSD, OR XB
                AUTOMATICALLY TRIGGERS THE COMPUTATION OF QTY, FOR
                WHICH AN ARRAY MUST BE PROVIDED IN THE CALLING
                SEQUENCE.
 
      ON RETURN
 
         QY     COMPLEX(N).
                QY CONNTAINS Q*Y, IF ITS COMPUTATION HAS BEEN
                REQUESTED.
 
         QTY    COMPLEX(N).
                QTY CONTAINS CTRANS(Q)*Y, IF ITS COMPUTATION HAS
                BEEN REQUESTED.  HERE CTRANS(Q) IS THE CONJUGATE
                TRANSPOSE OF THE MATRIX Q.
 
         B      COMPLEX(K)
                B CONTAINS THE SOLUTION OF THE LEAST SQUARES PROBLEM
 
                     MINIMIZE NORM2(Y - XK*B),
 
                IF ITS COMPUTATION HAS BEEN REQUESTED.  (NOTE THAT
                IF PIVOTING WAS REQUESTED IN CQRDC, THE J-TH
                COMPONENT OF B WILL BE ASSOCIATED WITH COLUMN JPVT(J)
                OF THE ORIGINAL MATRIX X THAT WAS INPUT INTO CQRDC.)
 
         RSD    COMPLEX(N).
                RSD CONTAINS THE LEAST SQUARES RESIDUAL Y - XK*B,
                IF ITS COMPUTATION HAS BEEN REQUESTED.  RSD IS
                ALSO THE ORTHOGONAL PROJECTION OF Y ONTO THE
                ORTHOGONAL COMPLEMENT OF THE COLUMN SPACE OF XK.
 
         XB     COMPLEX(N).
                XB CONTAINS THE LEAST SQUARES APPROXIMATION XK*B,
                IF ITS COMPUTATION HAS BEEN REQUESTED.  XB IS ALSO
                THE ORTHOGONAL PROJECTION OF Y ONTO THE COLUMN SPACE
                OF X.
 
         INFO   INTEGER.
                INFO IS ZERO UNLESS THE COMPUTATION OF B HAS
                BEEN REQUESTED AND R IS EXACTLY SINGULAR.  IN
                THIS CASE, INFO IS THE INDEX OF THE FIRST ZERO
                DIAGONAL ELEMENT OF R AND B IS LEFT UNALTERED.
 
      THE PARAMETERS QY, QTY, B, RSD, AND XB ARE NOT REFERENCED
      IF THEIR COMPUTATION IS NOT REQUESTED AND IN THIS CASE
      CAN BE REPLACED BY DUMMY VARIABLES IN THE CALLING PROGRAM.
      TO SAVE STORAGE, THE USER MAY IN SOME CASES USE THE SAME
      ARRAY FOR DIFFERENT PARAMETERS IN THE CALLING SEQUENCE.  A
      FREQUENTLY OCCURING EXAMPLE IS WHEN ONE WISHES TO COMPUTE
      ANY OF B, RSD, OR XB AND DOES NOT NEED Y OR QTY.  IN THIS
      CASE ONE MAY IDENTIFY Y, QTY, AND ONE OF B, RSD, OR XB, WHILE
      PROVIDING SEPARATE ARRAYS FOR ANYTHING ELSE THAT IS TO BE
      COMPUTED.  THUS THE CALLING SEQUENCE
 
           CALL CQRSL(X,LDX,N,K,QRAUX,Y,DUM,Y,B,Y,DUM,110,INFO)
 
      WILL RESULT IN THE COMPUTATION OF B AND RSD, WITH RSD
      OVERWRITING Y.  MORE GENERALLY, EACH ITEM IN THE FOLLOWING
      LIST CONTAINS GROUPS OF PERMISSIBLE IDENTIFICATIONS FOR
      A SINGLE CALLINNG SEQUENCE.
 
           1. (Y,QTY,B) (RSD) (XB) (QY)
 
           2. (Y,QTY,RSD) (B) (XB) (QY)
 
           3. (Y,QTY,XB) (B) (RSD) (QY)
 
           4. (Y,QY) (QTY,B) (RSD) (XB)
 
           5. (Y,QY) (QTY,RSD) (B) (XB)
 
           6. (Y,QY) (QTY,XB) (B) (RSD)
 
      IN ANY GROUP THE VALUE RETURNED IN THE ARRAY ALLOCATED TO
      THE GROUP CORRESPONDS TO THE LAST MEMBER OF THE GROUP.
 
\end{verbatim}}
\section{CSCAL}
\index{blas,CSCAL}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  CSCAL(N,CA,CX,INCX)
 
      SCALES A VECTOR BY A CONSTANT.
      JACK DONGARRA, LINPACK,  3/11/78.
 
\end{verbatim}}
\section{CSICO}
\index{linpack,CSICO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSICO(A,LDA,N,KPVT,RCOND,Z)
      INTEGER LDA,N,KPVT(1)
      COMPLEX A(LDA,1),Z(1)
      REAL RCOND
 
      CSICO FACTORS A COMPLEX SYMMETRIC MATRIX BY ELIMINATION WITH
      SYMMETRIC PIVOTING AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CSIFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CSICO BY CSISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CSICO BY CSISL.
      TO COMPUTE  INVERSE(A) , FOLLOW CSICO BY CSIDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CSICO BY CSIDI.
 
      ON ENTRY
 
         A       COMPLEX(LDA, N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{CSIDC}
\index{linpack,CSIDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSIDI(A,LDA,N,KPVT,DET,WORK,JOB)
      INTEGER LDA,N,JOB
      COMPLEX A(LDA,1),DET(2),WORK(1)
      INTEGER KPVT(1)
 
      CSIDI COMPUTES THE DETERMINANT AND INVERSE
      OF A COMPLEX SYMMETRIC MATRIX USING THE FACTORS FROM CSIFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE OUTPUT FROM CSIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY A.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CSIFA.
 
         WORK    COMPLEX(N)
                 WORK VECTOR.  CONTENTS DESTROYED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  AB  WHERE
                    IF  B .NE. 0, THE INVERSE IS COMPUTED,
                    IF  A .NE. 0, THE DETERMINANT IS COMPUTED,
 
                 FOR EXAMPLE, JOB = 11  GIVES BOTH.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         A      CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX.  THE STRICT LOWER TRIANGLE
                IS NEVER REFERENCED.
 
         DET    COMPLEX(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF THE INVERSE IS REQUESTED
         AND  CSICO  HAS SET RCOND .EQ. 0.0
         OR  CSIFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{CSIFA}
\index{linpack,CSIFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSIFA(A,LDA,N,KPVT,INFO)
      INTEGER LDA,N,KPVT(1),INFO
      COMPLEX A(LDA,1)
 
      CSIFA FACTORS A COMPLEX SYMMETRIC MATRIX BY ELIMINATION
      WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW CSIFA BY CSISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CSIFA BY CSISL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CSIFA BY CSIDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CSIFA BY CSIDI.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT CSISL OR CSIDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
\end{verbatim}}
\section{CSISL}
\index{linpack,CSISL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSISL(A,LDA,N,KPVT,B)
      INTEGER LDA,N,KPVT(1)
      COMPLEX A(LDA,1),B(1)
 
      CSISL SOLVES THE COMPLEX SYMMETRIC SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CSIFA.
 
      ON ENTRY
 
         A       COMPLEX(LDA,N)
                 THE OUTPUT FROM CSIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CSIFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  CSICO  HAS SET RCOND .EQ. 0.0
         OR  CSIFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CSIFA(A,LDA,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CSISL(A,LDA,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CSPCO}
\index{linpack,CSPCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSPCO(AP,N,KPVT,RCOND,Z)
      INTEGER N,KPVT(1)
      COMPLEX AP(1),Z(1)
      REAL RCOND
 
      CSPCO FACTORS A COMPLEX SYMMETRIC MATRIX STORED IN PACKED
      FORM BY ELIMINATION WITH SYMMETRIC PIVOTING AND ESTIMATES
      THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, CSPFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW CSPCO BY CSPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CSPCO BY CSPSL.
      TO COMPUTE  INVERSE(A) , FOLLOW CSPCO BY CSPDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CSPCO BY CSPDI.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CSPDI}
\index{linpack,CSPDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSPDI(AP,N,KPVT,DET,WORK,JOB)
      INTEGER N,JOB
      COMPLEX AP(1),WORK(1),DET(2)
      INTEGER KPVT(1)
 
      CSPDI COMPUTES THE DETERMINANT AND INVERSE
      OF A COMPLEX SYMMETRIC MATRIX USING THE FACTORS FROM CSPFA,
      WHERE THE MATRIX IS STORED IN PACKED FORM.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE OUTPUT FROM CSPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CSPFA.
 
         WORK    COMPLEX(N)
                 WORK VECTOR.  CONTENTS IGNORED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  AB  WHERE
                    IF  B .NE. 0, THE INVERSE IS COMPUTED,
                    IF  A .NE. 0, THE DETERMINANT IS COMPUTED,
 
                 FOR EXAMPLE, JOB = 11  GIVES BOTH.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         AP     CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX, STORED IN PACKED FORM.
                THE COLUMNS OF THE UPPER TRIANGLE ARE STORED
                SEQUENTIALLY IN A ONE-DIMENSIONAL ARRAY.
 
         DET    COMPLEX(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INVERSE IS REQUESTED
         AND  CSPCO  HAS SET RCOND .EQ. 0.0
         OR  CSPFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{CSPFA}
\index{linpack,CSPFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSPFA(AP,N,KPVT,INFO)
      INTEGER N,KPVT(1),INFO
      COMPLEX AP(1)
 
      CSPFA FACTORS A COMPLEX SYMMETRIC MATRIX STORED IN
      PACKED FORM BY ELIMINATION WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW CSPFA BY CSPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW CSPFA BY CSPSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW CSPFA BY CSPDI.
      TO COMPUTE  INVERSE(A) , FOLLOW CSPFA BY CSPDI.
 
      ON ENTRY
 
         AP      COMPLEX (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT CSPSL OR CSPDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K)  = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{CSPSL}
\index{linpack,CSPSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSPSL(AP,N,KPVT,B)
      INTEGER N,KPVT(1)
      COMPLEX AP(1),B(1)
 
      CSISL SOLVES THE COMPLEX SYMMETRIC SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY CSPFA.
 
      ON ENTRY
 
         AP      COMPLEX(N*(N+1)/2)
                 THE OUTPUT FROM CSPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM CSPFA.
 
         B       COMPLEX(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  CSPCO  HAS SET RCOND .EQ. 0.0
         OR  CSPFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL CSPFA(AP,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL CSPSL(AP,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{CSROT}
\index{blas,CSROT}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  CSROT (N,CX,INCX,CY,INCY,C,S)
 
      APPLIES A PLANE ROTATION, WHERE THE COS AND SIN (C AND S) ARE REAL
      AND THE VECTORS CX AND CY ARE COMPLEX.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CSSCAL}
\index{blas,CSSCAL}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  CSSCAL(N,SA,CX,INCX)
 
      SCALES A COMPLEX VECTOR BY A REAL CONSTANT.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CSVDC}
\index{linpack,CSVDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CSVDC(X,LDX,N,P,S,E,U,LDU,V,LDV,WORK,JOB,INFO)
      INTEGER LDX,N,P,LDU,LDV,JOB,INFO
      COMPLEX X(LDX,1),S(1),E(1),U(LDU,1),V(LDV,1),WORK(1)
 
 
      CSVDC IS A SUBROUTINE TO REDUCE A COMPLEX NXP MATRIX X BY
      UNITARY TRANSFORMATIONS U AND V TO DIAGONAL FORM.  THE
      DIAGONAL ELEMENTS S(I) ARE THE SINGULAR VALUES OF X.  THE
      COLUMNS OF U ARE THE CORRESPONDING LEFT SINGULAR VECTORS,
      AND THE COLUMNS OF V THE RIGHT SINGULAR VECTORS.
 
      ON ENTRY
 
          X         COMPLEX(LDX,P), WHERE LDX.GE.N.
                    X CONTAINS THE MATRIX WHOSE SINGULAR VALUE
                    DECOMPOSITION IS TO BE COMPUTED.  X IS
                    DESTROYED BY CSVDC.
 
          LDX       INTEGER.
                    LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
          N         INTEGER.
                    N IS THE NUMBER OF COLUMNS OF THE MATRIX X.
 
          P         INTEGER.
                    P IS THE NUMBER OF ROWS OF THE MATRIX X.
 
          LDU       INTEGER.
                    LDU IS THE LEADING DIMENSION OF THE ARRAY U
                    (SEE BELOW).
 
          LDV       INTEGER.
                    LDV IS THE LEADING DIMENSION OF THE ARRAY V
                    (SEE BELOW).
 
          WORK      COMPLEX(N).
                    WORK IS A SCRATCH ARRAY.
 
          JOB       INTEGER.
                    JOB CONTROLS THE COMPUTATION OF THE SINGULAR
                    VECTORS.  IT HAS THE DECIMAL EXPANSION AB
                    WITH THE FOLLOWING MEANING
 
                         A.EQ.0    DO NOT COMPUTE THE LEFT SINGULAR
                                   VECTORS.
                         A.EQ.1    RETURN THE N LEFT SINGULAR VECTORS
                                   IN U.
                         A.GE.2    RETURNS THE FIRST MIN(N,P)
                                   LEFT SINGULAR VECTORS IN U.
                         B.EQ.0    DO NOT COMPUTE THE RIGHT SINGULAR
                                   VECTORS.
                         B.EQ.1    RETURN THE RIGHT SINGULAR VECTORS
                                   IN V.
 
      ON RETURN
 
          S         COMPLEX(MM), WHERE MM=MIN(N+1,P).
                    THE FIRST MIN(N,P) ENTRIES OF S CONTAIN THE
                    SINGULAR VALUES OF X ARRANGED IN DESCENDING
                    ORDER OF MAGNITUDE.
 
          E         COMPLEX(P).
                    E ORDINARILY CONTAINS ZEROS.  HOWEVER SEE THE
                    DISCUSSION OF INFO FOR EXCEPTIONS.
 
          U         COMPLEX(LDU,K), WHERE LDU.GE.N.  IF JOBA.EQ.1 THEN
                                    K.EQ.N, IF JOBA.GE.2 THEN
                                    K.EQ.MIN(N,P).
                    U CONTAINS THE MATRIX OF RIGHT SINGULAR VECTORS.
                    U IS NOT REFERENCED IF JOBA.EQ.0.  IF N.LE.P
                    OR IF JOBA.GT.2, THEN U MAY BE IDENTIFIED WITH X
                    IN THE SUBROUTINE CALL.
 
          V         COMPLEX(LDV,P), WHERE LDV.GE.P.
                    V CONTAINS THE MATRIX OF RIGHT SINGULAR VECTORS.
                    V IS NOT REFERENCED IF JOBB.EQ.0.  IF P.LE.N,
                    THEN V MAY BE IDENTIFIED WHTH X IN THE
                    SUBROUTINE CALL.
 
          INFO      INTEGER.
                    THE SINGULAR VALUES (AND THEIR CORRESPONDING
                    SINGULAR VECTORS) S(INFO+1),S(INFO+2),...,S(M)
                    ARE CORRECT (HERE M=MIN(N,P)).  THUS IF
                    INFO.EQ.0, ALL THE SINGULAR VALUES AND THEIR
                    VECTORS ARE CORRECT.  IN ANY EVENT, THE MATRIX
                    B = CTRANS(U)*X*V IS THE BIDIAGONAL MATRIX
                    WITH THE ELEMENTS OF S ON ITS DIAGONAL AND THE
                    ELEMENTS OF E ON ITS SUPER-DIAGONAL (CTRANS(U)
                    IS THE CONJUGATE-TRANSPOSE OF U).  THUS THE
                    SINGULAR VALUES OF X AND B ARE THE SAME.
\end{verbatim}}
\section{CSWAP}
\index{blas,CSWAP}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  CSWAP (N,CX,INCX,CY,INCY)
 
      INTERCHANGES TWO VECTORS.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{CTRCO}
\index{linpack,CTRCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CTRCO(T,LDT,N,RCOND,Z,JOB)
      INTEGER LDT,N,JOB
      COMPLEX T(LDT,1),Z(1)
      REAL RCOND
 
      CTRCO ESTIMATES THE CONDITION OF A COMPLEX TRIANGULAR MATRIX.
 
      ON ENTRY
 
         T       COMPLEX(LDT,N)
                 T CONTAINS THE TRIANGULAR MATRIX. THE ZERO
                 ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                 THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                 USED TO STORE OTHER INFORMATION.
 
         LDT     INTEGER
                 LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
         N       INTEGER
                 N IS THE ORDER OF THE SYSTEM.
 
         JOB     INTEGER
                 = 0         T  IS LOWER TRIANGULAR.
                 = NONZERO   T  IS UPPER TRIANGULAR.
 
      ON RETURN
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  T .
                 FOR THE SYSTEM  T*X = B , RELATIVE PERTURBATIONS
                 IN  T  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  T  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       COMPLEX(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  T  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{CTRDI}
\index{linpack,CTRDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CTRDI(T,LDT,N,DET,JOB,INFO)
      INTEGER LDT,N,JOB,INFO
      COMPLEX T(LDT,1),DET(2)
 
      CTRDI COMPUTES THE DETERMINANT AND INVERSE OF A COMPLEX
      TRIANGULAR MATRIX.
 
      ON ENTRY
 
         T       COMPLEX(LDT,N)
                 T CONTAINS THE TRIANGULAR MATRIX. THE ZERO
                 ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                 THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                 USED TO STORE OTHER INFORMATION.
 
         LDT     INTEGER
                 LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
         N       INTEGER
                 N IS THE ORDER OF THE SYSTEM.
 
         JOB     INTEGER
                 = 010       NO DET, INVERSE OF LOWER TRIANGULAR.
                 = 011       NO DET, INVERSE OF UPPER TRIANGULAR.
                 = 100       DET, NO INVERSE.
                 = 110       DET, INVERSE OF LOWER TRIANGULAR.
                 = 111       DET, INVERSE OF UPPER TRIANGULAR.
 
      ON RETURN
 
         T       INVERSE OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE UNCHANGED.
 
         DET     COMPLEX(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. CABS1(DET(1)) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
         INFO    INTEGER
                 INFO CONTAINS ZERO IF THE SYSTEM IS NONSINGULAR
                 AND THE INVERSE IS REQUESTED.
                 OTHERWISE INFO CONTAINS THE INDEX OF
                 A ZERO DIAGONAL ELEMENT OF T.
 
\end{verbatim}}
\section{CTRSL}
\index{linpack,CTRSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE CTRSL(T,LDT,N,B,JOB,INFO)
      INTEGER LDT,N,JOB,INFO
      COMPLEX T(LDT,1),B(1)
 
 
      CTRSL SOLVES SYSTEMS OF THE FORM
 
                    T * X = B
      OR
                    CTRANS(T) * X = B
 
      WHERE T IS A TRIANGULAR MATRIX OF ORDER N. HERE CTRANS(T)
      DENOTES THE CONJUGATE TRANSPOSE OF THE MATRIX T.
 
      ON ENTRY
 
          T         COMPLEX(LDT,N)
                    T CONTAINS THE MATRIX OF THE SYSTEM. THE ZERO
                    ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                    THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                    USED TO STORE OTHER INFORMATION.
 
          LDT       INTEGER
                    LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
          N         INTEGER
                    N IS THE ORDER OF THE SYSTEM.
 
          B         COMPLEX(N).
                    B CONTAINS THE RIGHT HAND SIDE OF THE SYSTEM.
 
          JOB       INTEGER
                    JOB SPECIFIES WHAT KIND OF SYSTEM IS TO BE SOLVED.
                    IF JOB IS
 
                         00   SOLVE T*X=B, T LOWER TRIANGULAR,
                         01   SOLVE T*X=B, T UPPER TRIANGULAR,
                         10   SOLVE CTRANS(T)*X=B, T LOWER TRIANGULAR,
                         11   SOLVE CTRANS(T)*X=B, T UPPER TRIANGULAR.
 
      ON RETURN
 
          B         B CONTAINS THE SOLUTION, IF INFO .EQ. 0.
                    OTHERWISE B IS UNALTERED.
 
          INFO      INTEGER
                    INFO CONTAINS ZERO IF THE SYSTEM IS NONSINGULAR.
                    OTHERWISE INFO CONTAINS THE INDEX OF
                    THE FIRST ZERO DIAGONAL ELEMENT OF T.
 
\end{verbatim}}
\section{ICAMAX}
\index{blas,ICAMAX}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      INTEGER FUNCTION ICAMAX(N,CX,INCX)
 
      FINDS THE INDEX OF ELEMENT HAVING MAX. ABSOLUTE VALUE.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{ISAMAX}
File: linpack.for\newline
Keywords: 
{\small\begin{verbatim}
      INTEGER FUNCTION ISAMAX(N,SX,INCX)
 
      FINDS THE INDEX OF ELEMENT HAVING MAX. ABSOLUTE VALUE.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SASUM}
File: linpack.for\newline
Keywords: 
{\small\begin{verbatim}
      REAL FUNCTION SASUM(N,SX,INCX)
 
      TAKES THE SUM OF THE ABSOLUTE VALUES.
      USES UNROLLED LOOPS FOR INCREMENT EQUAL TO ONE.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SAXPY}
\index{blas,SAXPY}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE SAXPY(N,SA,SX,INCX,SY,INCY)
 
      CONSTANT TIMES A VECTOR PLUS A VECTOR.
      USES UNROLLED LOOP FOR INCREMENTS EQUAL TO ONE.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SCASUM}
\index{blas,SCASUM}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      REAL FUNCTION SCASUM(N,CX,INCX)
 
      TAKES THE SUM OF THE ABSOLUTE VALUES OF A COMPLEX VECTOR AND
      RETURNS A SINGLE PRECISION RESULT.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SCHDC}
\index{linpack,SCHDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SCHDC(A,LDA,P,WORK,JPVT,JOB,INFO)
      INTEGER LDA,P,JPVT(1),JOB,INFO
      REAL A(LDA,1),WORK(1)
 
      SCHDC COMPUTES THE CHOLESKY DECOMPOSITION OF A POSITIVE DEFINITE
      MATRIX.  A PIVOTING OPTION ALLOWS THE USER TO ESTIMATE THE
      CONDITION OF A POSITIVE DEFINITE MATRIX OR DETERMINE THE RANK
      OF A POSITIVE SEMIDEFINITE MATRIX.
 
      ON ENTRY
 
          A      REAL(LDA,P).
                 A CONTAINS THE MATRIX WHOSE DECOMPOSITION IS TO
                 BE COMPUTED.  ONLT THE UPPER HALF OF A NEED BE STORED.
                 THE LOWER PART OF THE ARRAY A IS NOT REFERENCED.
 
          LDA    INTEGER.
                 LDA IS THE LEADING DIMENSION OF THE ARRAY A.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX.
 
          WORK   REAL.
                 WORK IS A WORK ARRAY.
 
          JPVT   INTEGER(P).
                 JPVT CONTAINS INTEGERS THAT CONTROL THE SELECTION
                 OF THE PIVOT ELEMENTS, IF PIVOTING HAS BEEN REQUESTED.
                 EACH DIAGONAL ELEMENT A(K,K)
                 IS PLACED IN ONE OF THREE CLASSES ACCORDING TO THE
                 VALUE OF JPVT(K).
 
                    IF JPVT(K) .GT. 0, THEN X(K) IS AN INITIAL
                                       ELEMENT.
 
                    IF JPVT(K) .EQ. 0, THEN X(K) IS A FREE ELEMENT.
 
                    IF JPVT(K) .LT. 0, THEN X(K) IS A FINAL ELEMENT.
 
                 BEFORE THE DECOMPOSITION IS COMPUTED, INITIAL ELEMENTS
                 ARE MOVED BY SYMMETRIC ROW AND COLUMN INTERCHANGES TO
                 THE BEGINNING OF THE ARRAY A AND FINAL
                 ELEMENTS TO THE END.  BOTH INITIAL AND FINAL ELEMENTS
                 ARE FROZEN IN PLACE DURING THE COMPUTATION AND ONLY
                 FREE ELEMENTS ARE MOVED.  AT THE K-TH STAGE OF THE
                 REDUCTION, IF A(K,K) IS OCCUPIED BY A FREE ELEMENT
                 IT IS INTERCHANGED WITH THE LARGEST FREE ELEMENT
                 A(L,L) WITH L .GE. K.  JPVT IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         JOB     INTEGER.
                 JOB IS AN INTEGER THAT INITIATES COLUMN PIVOTING.
                 IF JOB .EQ. 0, NO PIVOTING IS DONE.
                 IF JOB .NE. 0, PIVOTING IS DONE.
 
      ON RETURN
 
          A      A CONTAINS IN ITS UPPER HALF THE CHOLESKY FACTOR
                 OF THE MATRIX A AS IT HAS BEEN PERMUTED BY PIVOTING.
 
          JPVT   JPVT(J) CONTAINS THE INDEX OF THE DIAGONAL ELEMENT
                 OF A THAT WAS MOVED INTO THE J-TH POSITION,
                 PROVIDED PIVOTING WAS REQUESTED.
 
          INFO   CONTAINS THE INDEX OF THE LAST POSITIVE DIAGONAL
                 ELEMENT OF THE CHOLESKY FACTOR.
 
      FOR POSITIVE DEFINITE MATRICES INFO = P IS THE NORMAL RETURN.
      FOR PIVOTING WITH POSITIVE SEMIDEFINITE MATRICES INFO WILL
      IN GENERAL BE LESS THAN P.  HOWEVER, INFO MAY BE GREATER THAN
      THE RANK OF A, SINCE ROUNDING ERROR CAN CAUSE AN OTHERWISE ZERO
      ELEMENT TO BE POSITIVE. INDEFINITE SYSTEMS WILL ALWAYS CAUSE
      INFO TO BE LESS THAN P.
 
\end{verbatim}}
\section{SCHDD}
\index{linpack,SCHDD}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SCHDD(R,LDR,P,X,Z,LDZ,NZ,Y,RHO,C,S,INFO)
      INTEGER LDR,P,LDZ,NZ,INFO
      REAL R(LDR,1),X(1),Z(LDZ,1),Y(1),S(1)
      REAL RHO(1),C(1)
 
      SCHDD DOWNDATES AN AUGMENTED CHOLESKY DECOMPOSITION OR THE
      TRIANGULAR FACTOR OF AN AUGMENTED QR DECOMPOSITION.
      SPECIFICALLY, GIVEN AN UPPER TRIANGULAR MATRIX R OF ORDER P,  A
      ROW VECTOR X, A COLUMN VECTOR Z, AND A SCALAR Y, SCHDD
      DETERMINEDS A ORTHOGONAL MATRIX U AND A SCALAR ZETA SUCH THAT
 
                         (R   Z )     (RR  ZZ)
                     U * (      )  =  (      ) ,
                         (0 ZETA)     ( X   Y)
 
      WHERE RR IS UPPER TRIANGULAR.  IF R AND Z HAVE BEEN OBTAINED
      FROM THE FACTORIZATION OF A LEAST SQUARES PROBLEM, THEN
      RR AND ZZ ARE THE FACTORS CORRESPONDING TO THE PROBLEM
      WITH THE OBSERVATION (X,Y) REMOVED.  IN THIS CASE, IF RHO
      IS THE NORM OF THE RESIDUAL VECTOR, THEN THE NORM OF
      THE RESIDUAL VECTOR OF THE DOWNDATED PROBLEM IS
      SQRT(RHO**2 - ZETA**2). SCHDD WILL SIMULTANEOUSLY DOWNDATE
      SEVERAL TRIPLETS (Z,Y,RHO) ALONG WITH R.
      FOR A LESS TERSE DESCRIPTION OF WHAT SCHDD DOES AND HOW
      IT MAY BE APPLIED, SEE THE LINPACK GUIDE.
 
      THE MATRIX U IS DETERMINED AS THE PRODUCT U(1)*...*U(P)
      WHERE U(I) IS A ROTATION IN THE (P+1,I)-PLANE OF THE
      FORM
 
                        ( C(I)     -S(I)     )
                        (                    ) .
                        ( S(I)       C(I)    )
 
      THE ROTATIONS ARE CHOSEN SO THAT C(I) IS REAL.
 
      THE USER IS WARNED THAT A GIVEN DOWNDATING PROBLEM MAY
      BE IMPOSSIBLE TO ACCOMPLISH OR MAY PRODUCE
      INACCURATE RESULTS.  FOR EXAMPLE, THIS CAN HAPPEN
      IF X IS NEAR A VECTOR WHOSE REMOVAL WILL REDUCE THE
      RANK OF R.  BEWARE.
 
      ON ENTRY
 
          R      REAL(LDR,P), WHERE LDR .GE. P.
                 R CONTAINS THE UPPER TRIANGULAR MATRIX
                 THAT IS TO BE DOWNDATED.  THE PART OF  R
                 BELOW THE DIAGONAL IS NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION FO THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          X      REAL(P).
                 X CONTAINS THE ROW VECTOR THAT IS TO
                 BE REMOVED FROM R.  X IS NOT ALTERED BY SCHDD.
 
          Z      REAL(LDZ,NZ), WHERE LDZ .GE. P.
                 Z IS AN ARRAY OF NZ P-VECTORS WHICH
                 ARE TO BE DOWNDATED ALONG WITH R.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF VECTORS TO BE DOWNDATED
                 NZ MAY BE ZERO, IN WHICH CASE Z, Y, AND RHO
                 ARE NOT REFERENCED.
 
          Y      REAL(NZ).
                 Y CONTAINS THE SCALARS FOR THE DOWNDATING
                 OF THE VECTORS Z.  Y IS NOT ALTERED BY SCHDD.
 
          RHO    REAL(NZ).
                 RHO CONTAINS THE NORMS OF THE RESIDUAL
                 VECTORS THAT ARE TO BE DOWNDATED.
 
      ON RETURN
 
          R
          Z      CONTAIN THE DOWNDATED QUANTITIES.
          RHO
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING
                 ROTATIONS.
 
          S      REAL(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING
                 ROTATIONS.
 
          INFO   INTEGER.
                 INFO IS SET AS FOLLOWS.
 
                    INFO = 0  IF THE ENTIRE DOWNDATING
                              WAS SUCCESSFUL.
 
                    INFO =-1  IF R COULD NOT BE DOWNDATED.
                              IN THIS CASE, ALL QUANTITIES
                              ARE LEFT UNALTERED.
 
                    INFO = 1  IF SOME RHO COULD NOT BE
                              DOWNDATED.  THE OFFENDING RHOS ARE
                              SET TO -1.
 
\end{verbatim}}
\section{SCHEX}
\index{linpack,SCHEX}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SCHEX(R,LDR,P,K,L,Z,LDZ,NZ,C,S,JOB)
      INTEGER LDR,P,K,L,LDZ,NZ,JOB
      REAL R(LDR,1),Z(LDZ,1),S(1)
      REAL C(1)
 
      SCHEX UPDATES THE CHOLESKY FACTORIZATION
 
                    A = TRANS(R)*R
 
      OF A POSITIVE DEFINITE MATRIX A OF ORDER P UNDER DIAGONAL
      PERMUTATIONS OF THE FORM
 
                    TRANS(E)*A*E
 
      WHERE E IS A PERMUTATION MATRIX.  SPECIFICALLY, GIVEN
      AN UPPER TRIANGULAR MATRIX R AND A PERMUTATION MATRIX
      E (WHICH IS SPECIFIED BY K, L, AND JOB), SCHEX DETERMINES
      A ORTHOGONAL MATRIX U SUCH THAT
 
                            U*R*E = RR,
 
      WHERE RR IS UPPER TRIANGULAR.  AT THE USERS OPTION, THE
      TRANSFORMATION U WILL BE MULTIPLIED INTO THE ARRAY Z.
      IF A = TRANS(X)*X, SO THAT R IS THE TRIANGULAR PART OF THE
      QR FACTORIZATION OF X, THEN RR IS THE TRIANGULAR PART OF THE
      QR FACTORIZATION OF X*E, I.E. X WITH ITS COLUMNS PERMUTED.
      FOR A LESS TERSE DESCRIPTION OF WHAT SCHEX DOES AND HOW
      IT MAY BE APPLIED, SEE THE LINPACK GUIDE.
 
      THE MATRIX Q IS DETERMINED AS THE PRODUCT U(L-K)*...*U(1)
      OF PLANE ROTATIONS OF THE FORM
 
                            (    C(I)       S(I) )
                            (                    ) ,
                            (    -S(I)      C(I) )
 
      WHERE C(I) IS REAL, THE ROWS THESE ROTATIONS OPERATE ON
      ARE DESCRIBED BELOW.
 
      THERE ARE TWO TYPES OF PERMUTATIONS, WHICH ARE DETERMINED
      BY THE VALUE OF JOB.
 
      1. RIGHT CIRCULAR SHIFT (JOB = 1).
 
          THE COLUMNS ARE REARRANGED IN THE FOLLOWING ORDER.
 
                 1,...,K-1,L,K,K+1,...,L-1,L+1,...,P.
 
          U IS THE PRODUCT OF L-K ROTATIONS U(I), WHERE U(I)
          ACTS IN THE (L-I,L-I+1)-PLANE.
 
      2. LEFT CIRCULAR SHIFT (JOB = 2).
          THE COLUMNS ARE REARRANGED IN THE FOLLOWING ORDER
 
                 1,...,K-1,K+1,K+2,...,L,K,L+1,...,P.
 
          U IS THE PRODUCT OF L-K ROTATIONS U(I), WHERE U(I)
          ACTS IN THE (K+I-1,K+I)-PLANE.
 
      ON ENTRY
 
          R      REAL(LDR,P), WHERE LDR.GE.P.
                 R CONTAINS THE UPPER TRIANGULAR FACTOR
                 THAT IS TO BE UPDATED.  ELEMENTS OF R
                 BELOW THE DIAGONAL ARE NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION OF THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          K      INTEGER.
                 K IS THE FIRST COLUMN TO BE PERMUTED.
 
          L      INTEGER.
                 L IS THE LAST COLUMN TO BE PERMUTED.
                 L MUST BE STRICTLY GREATER THAN K.
 
          Z      REAL(LDZ,NZ), WHERE LDZ.GE.P.
                 Z IS AN ARRAY OF NZ P-VECTORS INTO WHICH THE
                 TRANSFORMATION U IS MULTIPLIED.  Z IS
                 NOT REFERENCED IF NZ = 0.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF COLUMNS OF THE MATRIX Z.
 
          JOB    INTEGER.
                 JOB DETERMINES THE TYPE OF PERMUTATION.
                        JOB = 1  RIGHT CIRCULAR SHIFT.
                        JOB = 2  LEFT CIRCULAR SHIFT.
 
      ON RETURN
 
          R      CONTAINS THE UPDATED FACTOR.
 
          Z      CONTAINS THE UPDATED MATRIX Z.
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING ROTATIONS.
 
          S      REAL(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING ROTATIONS.
 
\end{verbatim}}
\section{SCHUD}
\index{linpack,SCHUD}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SCHUD(R,LDR,P,X,Z,LDZ,NZ,Y,RHO,C,S)
      INTEGER LDR,P,LDZ,NZ
      REAL RHO(1),C(1)
      REAL R(LDR,1),X(1),Z(LDZ,1),Y(1),S(1)
 
      SCHUD UPDATES AN AUGMENTED CHOLESKY DECOMPOSITION OF THE
      TRIANGULAR PART OF AN AUGMENTED QR DECOMPOSITION.  SPECIFICALLY,
      GIVEN AN UPPER TRIANGULAR MATRIX R OF ORDER P, A ROW VECTOR
      X, A COLUMN VECTOR Z, AND A SCALAR Y, SCHUD DETERMINES A
      UNTIARY MATRIX U AND A SCALAR ZETA SUCH THAT
 
 
                               (R  Z)     (RR   ZZ )
                          U  * (    )  =  (        ) ,
                               (X  Y)     ( 0  ZETA)
 
      WHERE RR IS UPPER TRIANGULAR.  IF R AND Z HAVE BEEN
      OBTAINED FROM THE FACTORIZATION OF A LEAST SQUARES
      PROBLEM, THEN RR AND ZZ ARE THE FACTORS CORRESPONDING TO
      THE PROBLEM WITH THE OBSERVATION (X,Y) APPENDED.  IN THIS
      CASE, IF RHO IS THE NORM OF THE RESIDUAL VECTOR, THEN THE
      NORM OF THE RESIDUAL VECTOR OF THE UPDATED PROBLEM IS
      SQRT(RHO**2 + ZETA**2).  SCHUD WILL SIMULTANEOUSLY UPDATE
      SEVERAL TRIPLETS (Z,Y,RHO).
      FOR A LESS TERSE DESCRIPTION OF WHAT SCHUD DOES AND HOW
      IT MAY BE APPLIED, SEE THE LINPACK GUIDE.
 
      THE MATRIX U IS DETERMINED AS THE PRODUCT U(P)*...*U(1),
      WHERE U(I) IS A ROTATION IN THE (I,P+1) PLANE OF THE
      FORM
 
                        (     C(I)      S(I) )
                        (                    ) .
                        (    -S(I)      C(I) )
 
      THE ROTATIONS ARE CHOSEN SO THAT C(I) IS REAL.
 
      ON ENTRY
 
          R      REAL(LDR,P), WHERE LDR .GE. P.
                 R CONTAINS THE UPPER TRIANGULAR MATRIX
                 THAT IS TO BE UPDATED.  THE PART OF R
                 BELOW THE DIAGONAL IS NOT REFERENCED.
 
          LDR    INTEGER.
                 LDR IS THE LEADING DIMENSION OF THE ARRAY R.
 
          P      INTEGER.
                 P IS THE ORDER OF THE MATRIX R.
 
          X      REAL(P).
                 X CONTAINS THE ROW TO BE ADDED TO R.  X IS
                 NOT ALTERED BY SCHUD.
 
          Z      REAL(LDZ,NZ), WHERE LDZ .GE. P.
                 Z IS AN ARRAY CONTAINING NZ P-VECTORS TO
                 BE UPDATED WITH R.
 
          LDZ    INTEGER.
                 LDZ IS THE LEADING DIMENSION OF THE ARRAY Z.
 
          NZ     INTEGER.
                 NZ IS THE NUMBER OF VECTORS TO BE UPDATED
                 NZ MAY BE ZERO, IN WHICH CASE Z, Y, AND RHO
                 ARE NOT REFERENCED.
 
          Y      REAL(NZ).
                 Y CONTAINS THE SCALARS FOR UPDATING THE VECTORS
                 Z.  Y IS NOT ALTERED BY SCHUD.
 
          RHO    REAL(NZ).
                 RHO CONTAINS THE NORMS OF THE RESIDUAL
                 VECTORS THAT ARE TO BE UPDATED.  IF RHO(J)
                 IS NEGATIVE, IT IS LEFT UNALTERED.
 
      ON RETURN
 
          RC
          RHO    CONTAIN THE UPDATED QUANTITIES.
          Z
 
          C      REAL(P).
                 C CONTAINS THE COSINES OF THE TRANSFORMING
                 ROTATIONS.
 
          S      REAL(P).
                 S CONTAINS THE SINES OF THE TRANSFORMING
                 ROTATIONS.
 
\end{verbatim}}
\section{SCOPY}
\index{blas.,SCOPY}
File: linpack.for\newline
Keywords: blas.
{\small\begin{verbatim}
      SUBROUTINE  SCOPY(N,SX,INCX,SY,INCY)
 
      COPIES A VECTOR, X, TO A VECTOR, Y.
      USES UNROLLED LOOPS FOR INCREMENTS EQUAL TO 1.
      JACK DONGARRA, LINPACK, 3/11/78.
\end{verbatim}}
\section{SDOT}
\index{blas.,SDOT}
File: linpack.for\newline
Keywords: blas.
{\small\begin{verbatim}
      REAL FUNCTION SDOT(N,SX,INCX,SY,INCY)
 
      FORMS THE DOT PRODUCT OF TWO VECTORS.
      USES UNROLLED LOOPS FOR INCREMENTS EQUAL TO ONE.
      JACK DONGARRA, LINPACK, 3/11/78.
\end{verbatim}}
\section{SGBCO}
\index{linpack,SGBCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)
      INTEGER LDA,N,ML,MU,IPVT(1)
      REAL ABD(LDA,1),Z(1)
      REAL RCOND
 
      SGBCO FACTORS A REAL BAND MATRIX BY GAUSSIAN
      ELIMINATION AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SGBFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SGBCO BY SGBSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SGBCO BY SGBSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SGBCO BY SGBDI.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS
                 OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND
                 THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS
                 ML+1 THROUGH 2*ML+MU+1 OF  ABD .
                 SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. 2*ML + MU + 1 .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
                 0 .LE. ML .LT. N .
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. MU .LT. N .
                 MORE EFFICIENT IF  ML .LE. MU .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND
                 THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      BAND STORAGE
 
            IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT
            WILL SET UP THE INPUT.
 
                    ML = (BAND WIDTH BELOW THE DIAGONAL)
                    MU = (BAND WIDTH ABOVE THE DIAGONAL)
                    M = ML + MU + 1
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-MU)
                       I2 = MIN0(N, J+ML)
                       DO 10 I = I1, I2
                          K = I - J + M
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .
            IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR
            ELEMENTS GENERATED DURING THE TRIANGULARIZATION.
            THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .
            THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE
            ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.
 
      EXAMPLE..  IF THE ORIGINAL MATRIX IS
 
            11 12 13  0  0  0
            21 22 23 24  0  0
             0 32 33 34 35  0
             0  0 43 44 45 46
             0  0  0 54 55 56
             0  0  0  0 65 66
 
       THEN  N = 6, ML = 1, MU = 2, LDA .GE. 5  AND ABD SHOULD CONTAIN
 
             *  *  *  +  +  +  , * = NOT USED
             *  * 13 24 35 46  , + = USED FOR PIVOTING
             * 12 23 34 45 56
            11 22 33 44 55 66
            21 32 43 54 65  *
 
\end{verbatim}}
\section{SGBDI}
\index{linpack,SGBDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGBDI(ABD,LDA,N,ML,MU,IPVT,DET)
      INTEGER LDA,N,ML,MU,IPVT(1)
      REAL ABD(LDA,1),DET(2)
 
      SGBDI COMPUTES THE DETERMINANT OF A BAND MATRIX
      USING THE FACTORS COMPUTED BY SGBCO OR SGBFA.
      IF THE INVERSE IS NEEDED, USE SGBSL  N  TIMES.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE OUTPUT FROM SGBCO OR SGBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SGBCO OR SGBFA.
 
      ON RETURN
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. ABS(DET(1)) .LT. 10.0
                 OR  DET(1) = 0.0 .
 
\end{verbatim}}
\section{SGBFA}
\index{linpack,SGBFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGBFA(ABD,LDA,N,ML,MU,IPVT,INFO)
      INTEGER LDA,N,ML,MU,IPVT(1),INFO
      REAL ABD(LDA,1)
 
      SGBFA FACTORS A REAL BAND MATRIX BY ELIMINATION.
 
      SGBFA IS USUALLY CALLED BY SGBCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS
                 OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND
                 THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS
                 ML+1 THROUGH 2*ML+MU+1 OF  ABD .
                 SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. 2*ML + MU + 1 .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
                 0 .LE. ML .LT. N .
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. MU .LT. N .
                 MORE EFFICIENT IF  ML .LE. MU .
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND
                 THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR
                      CONDITION FOR THIS SUBROUTINE, BUT IT DOES
                      INDICATE THAT SGBSL WILL DIVIDE BY ZERO IF
                      CALLED.  USE  RCOND  IN SGBCO FOR A RELIABLE
                      INDICATION OF SINGULARITY.
 
      BAND STORAGE
 
            IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT
            WILL SET UP THE INPUT.
 
                    ML = (BAND WIDTH BELOW THE DIAGONAL)
                    MU = (BAND WIDTH ABOVE THE DIAGONAL)
                    M = ML + MU + 1
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-MU)
                       I2 = MIN0(N, J+ML)
                       DO 10 I = I1, I2
                          K = I - J + M
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .
            IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR
            ELEMENTS GENERATED DURING THE TRIANGULARIZATION.
            THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .
            THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE
            ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.
 
\end{verbatim}}
\section{SGBSL}
\index{linpack,SGBSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGBSL(ABD,LDA,N,ML,MU,IPVT,B,JOB)
      INTEGER LDA,N,ML,MU,IPVT(1),JOB
      REAL ABD(LDA,1),B(1)
 
      SGBSL SOLVES THE REAL BAND SYSTEM
      A * X = B  OR  TRANS(A) * X = B
      USING THE FACTORS COMPUTED BY SGBCO OR SGBFA.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE OUTPUT FROM SGBCO OR SGBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE ORIGINAL MATRIX.
 
         ML      INTEGER
                 NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.
 
         MU      INTEGER
                 NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SGBCO OR SGBFA.
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
         JOB     INTEGER
                 = 0         TO SOLVE  A*X = B ,
                 = NONZERO   TO SOLVE  TRANS(A)*X = B , WHERE
                             TRANS(A)  IS THE TRANSPOSE.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A
         ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY
         BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER
         SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE
         CALLED CORRECTLY AND IF SGBCO HAS SET RCOND .GT. 0.0
         OR SGBFA HAS SET INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)
            IF (RCOND IS TOO SMALL) GO TO ...
            DO 10 J = 1, P
               CALL SGBSL(ABD,LDA,N,ML,MU,IPVT,C(1,J),0)
         10 CONTINUE
 
\end{verbatim}}
\section{SGECO}
\index{linpack,SGECO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGECO(A,LDA,N,IPVT,RCOND,Z)
      INTEGER LDA,N,IPVT(1)
      REAL A(LDA,1),Z(1)
      REAL RCOND
 
      SGECO FACTORS A REAL MATRIX BY GAUSSIAN ELIMINATION
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SGEFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SGECO BY SGESL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SGECO BY SGESL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SGECO BY SGEDI.
      TO COMPUTE  INVERSE(A) , FOLLOW SGECO BY SGEDI.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE MATRIX TO BE FACTORED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS
                 WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      LINPACK. THIS VERSION DATED 08/14/78 .
      CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.
 
      SUBROUTINES AND FUNCTIONS
 
      LINPACK SGEFA
      BLAS SAXPY,SDOT,SSCAL,SASUM
      FORTRAN ABS,AMAX1,SIGN
 
\end{verbatim}}
\section{SGEDI}
\index{linpack,SGEDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGEDI(A,LDA,N,IPVT,DET,WORK,JOB)
      INTEGER LDA,N,IPVT(1),JOB
      REAL A(LDA,1),DET(2),WORK(1)
 
      SGEDI COMPUTES THE DETERMINANT AND INVERSE OF A MATRIX
      USING THE FACTORS COMPUTED BY SGECO OR SGEFA.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE OUTPUT FROM SGECO OR SGEFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SGECO OR SGEFA.
 
         WORK    REAL(N)
                 WORK VECTOR.  CONTENTS DESTROYED.
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         A       INVERSE OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE UNCHANGED.
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. ABS(DET(1)) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF SGECO HAS SET RCOND .GT. 0.0 OR SGEFA HAS SET
         INFO .EQ. 0 .
 
      LINPACK. THIS VERSION DATED 08/14/78 .
      CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.
 
      SUBROUTINES AND FUNCTIONS
 
      BLAS SAXPY,SSCAL,SSWAP
      FORTRAN ABS,MOD
\end{verbatim}}
\section{SGEFA}
\index{linpack,SGEFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGEFA(A,LDA,N,IPVT,INFO)
      INTEGER LDA,N,IPVT(1),INFO
      REAL A(LDA,1)
 
      SGEFA FACTORS A REAL MATRIX BY GAUSSIAN ELIMINATION.
 
      SGEFA IS USUALLY CALLED BY SGECO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR SGECO) = (1 + 9/N)*(TIME FOR SGEFA) .
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE MATRIX TO BE FACTORED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS
                 WHICH WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE
                 L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER
                 TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.
 
         IPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR
                      CONDITION FOR THIS SUBROUTINE, BUT IT DOES
                      INDICATE THAT SGESL OR SGEDI WILL DIVIDE BY ZERO
                      IF CALLED.  USE  RCOND  IN SGECO FOR A RELIABLE
                      INDICATION OF SINGULARITY.
 
      LINPACK. THIS VERSION DATED 08/14/78 .
      CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.
 
      SUBROUTINES AND FUNCTIONS
 
      BLAS SAXPY,SSCAL,ISAMAX
 
\end{verbatim}}
\section{SGESL}
\index{linpack,SGESL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGESL(A,LDA,N,IPVT,B,JOB)
      INTEGER LDA,N,IPVT(1),JOB
      REAL A(LDA,1),B(1)
 
      SGESL SOLVES THE REAL SYSTEM
      A * X = B  OR  TRANS(A) * X = B
      USING THE FACTORS COMPUTED BY SGECO OR SGEFA.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE OUTPUT FROM SGECO OR SGEFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         IPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SGECO OR SGEFA.
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
         JOB     INTEGER
                 = 0         TO SOLVE  A*X = B ,
                 = NONZERO   TO SOLVE  TRANS(A)*X = B  WHERE
                             TRANS(A)  IS THE TRANSPOSE.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A
         ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY
         BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER
         SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE
         CALLED CORRECTLY AND IF SGECO HAS SET RCOND .GT. 0.0
         OR SGEFA HAS SET INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SGECO(A,LDA,N,IPVT,RCOND,Z)
            IF (RCOND IS TOO SMALL) GO TO ...
            DO 10 J = 1, P
               CALL SGESL(A,LDA,N,IPVT,C(1,J),0)
         10 CONTINUE
 
      LINPACK. THIS VERSION DATED 08/14/78 .
      CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.
 
      SUBROUTINES AND FUNCTIONS
 
      BLAS SAXPY,SDOT
\end{verbatim}}
\section{SGTS}
\index{linpack,SGTS}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SGTSL(N,C,D,E,B,INFO)
      INTEGER N,INFO
      REAL C(1),D(1),E(1),B(1)
 
      SGTSL GIVEN A GENERAL TRIDIAGONAL MATRIX AND A RIGHT HAND
      SIDE WILL FIND THE SOLUTION.
 
      ON ENTRY
 
         N       INTEGER
                 IS THE ORDER OF THE TRIDIAGONAL MATRIX.
 
         C       REAL(N)
                 IS THE SUBDIAGONAL OF THE TRIDIAGONAL MATRIX.
                 C(2) THROUGH C(N) SHOULD CONTAIN THE SUBDIAGONAL.
                 ON OUTPUT C IS DESTROYED.
 
         D       REAL(N)
                 IS THE DIAGONAL OF THE TRIDIAGONAL MATRIX.
                 ON OUTPUT D IS DESTROYED.
 
         E       REAL(N)
                 IS THE SUPERDIAGONAL OF THE TRIDIAGONAL MATRIX.
                 E(1) THROUGH E(N-1) SHOULD CONTAIN THE SUPERDIAGONAL.
                 ON OUTPUT E IS DESTROYED.
 
         B       REAL(N)
                 IS THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       IS THE SOLUTION VECTOR.
 
         INFO    INTEGER
                 = 0 NORMAL VALUE.
                 = K IF THE K-TH ELEMENT OF THE DIAGONAL BECOMES
                     EXACTLY ZERO.  THE SUBROUTINE RETURNS WHEN
                     THIS IS DETECTED.
 
\end{verbatim}}
\section{SMACH}
\index{blas,SMACH}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      REAL FUNCTION SMACH(JOB)
      INTEGER JOB
 
      SMACH COMPUTES MACHINE PARAMETERS OF FLOATING POINT
      ARITHMETIC FOR USE IN TESTING ONLY.  NOT REQUIRED BY
      LINPACK PROPER.
 
      IF TROUBLE WITH AUTOMATIC COMPUTATION OF THESE QUANTITIES,
      THEY CAN BE SET BY DIRECT ASSIGNMENT STATEMENTS.
      ASSUME THE COMPUTER HAS
 
         B = BASE OF ARITHMETIC
         T = NUMBER OF BASE  B  DIGITS
         L = SMALLEST POSSIBLE EXPONENT
         U = LARGEST POSSIBLE EXPONENT
 
      THEN
 
         EPS = B**(1-T)
         TINY = 100.0*B**(-L+T)
         HUGE = 0.01*B**(U-T)
 
      DMACH SAME AS SMACH EXCEPT T, L, U APPLY TO
      DOUBLE PRECISION.
 
      CMACH SAME AS SMACH EXCEPT IF COMPLEX DIVISION
      IS DONE BY
 
         1/(X+I*Y) = (X-I*Y)/(X**2+Y**2)
 
      THEN
 
         TINY = SQRT(TINY)
         HUGE = SQRT(HUGE)
 
 
      JOB IS 1, 2 OR 3 FOR EPSILON, TINY AND HUGE, RESPECTIVELY.
 
\end{verbatim}}
\section{Snrm2}
\index{blas,Snrm2}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
        real function snrm2( n, cx, incx)
 
        integer n,incx
        real cx(*)
 
   Find the Euclidean norm of a vector of reals. Do it in a way
   to help avoid overflow and underflow problems.
 
   Input:
     n          Number of elements.
     incx       Increment between elements.
     cx         Real vector.
 
   Output:
     snrm2      The Euclidean norm.
\end{verbatim}}
\section{SPBCO}
\index{linpack,SPBCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPBCO(ABD,LDA,N,M,RCOND,Z,INFO)
      INTEGER LDA,N,M,INFO
      REAL ABD(LDA,1),Z(1)
      REAL RCOND
 
      SPBCO FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      STORED IN BAND FORM AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SPBFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SPBCO BY SPBSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SPBCO BY SPBSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SPBCO BY SPBDI.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE MATRIX TO BE FACTORED.  THE COLUMNS OF THE UPPER
                 TRIANGLE ARE STORED IN THE COLUMNS OF ABD AND THE
                 DIAGONALS OF THE UPPER TRIANGLE ARE STORED IN THE
                 ROWS OF ABD .  SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. M + 1 .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. M .LT. N .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX  R , STORED IN BAND
                 FORM, SO THAT  A = TRANS(R)*R .
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS SINGULAR TO WORKING PRECISION, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
      BAND STORAGE
 
            IF  A  IS A SYMMETRIC POSITIVE DEFINITE BAND MATRIX,
            THE FOLLOWING PROGRAM SEGMENT WILL SET UP THE INPUT.
 
                    M = (BAND WIDTH ABOVE DIAGONAL)
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-M)
                       DO 10 I = I1, J
                          K = I-J+M+1
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
            THIS USES  M + 1  ROWS OF  A , EXCEPT FOR THE  M BY M
            UPPER LEFT TRIANGLE, WHICH IS IGNORED.
 
      EXAMPLE..  IF THE ORIGINAL MATRIX IS
 
            11 12 13  0  0  0
            12 22 23 24  0  0
            13 23 33 34 35  0
             0 24 34 44 45 46
             0  0 35 45 55 56
             0  0  0 46 56 66
 
      THEN  N = 6 , M = 2  AND  ABD  SHOULD CONTAIN
 
             *  * 13 24 35 46
             * 12 23 34 45 56
            11 22 33 44 55 66
 
\end{verbatim}}
\section{SPBDI}
\index{linpack,SPBDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPBDI(ABD,LDA,N,M,DET)
      INTEGER LDA,N,M
      REAL ABD(LDA,1)
      REAL DET(2)
 
      SPBDI COMPUTES THE DETERMINANT
      OF A REAL SYMMETRIC POSITIVE DEFINITE BAND MATRIX
      USING THE FACTORS COMPUTED BY SPBCO OR SPBFA.
      IF THE INVERSE IS NEEDED, USE SPBSL  N  TIMES.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE OUTPUT FROM SPBCO OR SPBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
      ON RETURN
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IN THE FORM
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
\end{verbatim}}
\section{SPBFA}
\index{linpack,SPBFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPBFA(ABD,LDA,N,M,INFO)
      INTEGER LDA,N,M,INFO
      REAL ABD(LDA,1)
 
      SPBFA FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      STORED IN BAND FORM.
 
      SPBFA IS USUALLY CALLED BY SPBCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE MATRIX TO BE FACTORED.  THE COLUMNS OF THE UPPER
                 TRIANGLE ARE STORED IN THE COLUMNS OF ABD AND THE
                 DIAGONALS OF THE UPPER TRIANGLE ARE STORED IN THE
                 ROWS OF ABD .  SEE THE COMMENTS BELOW FOR DETAILS.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
                 LDA MUST BE .GE. M + 1 .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
                 0 .LE. M .LT. N .
 
      ON RETURN
 
         ABD     AN UPPER TRIANGULAR MATRIX  R , STORED IN BAND
                 FORM, SO THAT  A = TRANS(R)*R .
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  IF THE LEADING MINOR OF ORDER  K  IS NOT
                      POSITIVE DEFINITE.
 
      BAND STORAGE
 
            IF  A  IS A SYMMETRIC POSITIVE DEFINITE BAND MATRIX,
            THE FOLLOWING PROGRAM SEGMENT WILL SET UP THE INPUT.
 
                    M = (BAND WIDTH ABOVE DIAGONAL)
                    DO 20 J = 1, N
                       I1 = MAX0(1, J-M)
                       DO 10 I = I1, J
                          K = I-J+M+1
                          ABD(K,J) = A(I,J)
                 10    CONTINUE
                 20 CONTINUE
 
\end{verbatim}}
\section{SPBSL}
\index{linpack,SPBSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPBSL(ABD,LDA,N,M,B)
      INTEGER LDA,N,M
      REAL ABD(LDA,1),B(1)
 
      SPBSL SOLVES THE REAL SYMMETRIC POSITIVE DEFINITE BAND
      SYSTEM  A*X = B
      USING THE FACTORS COMPUTED BY SPBCO OR SPBFA.
 
      ON ENTRY
 
         ABD     REAL(LDA, N)
                 THE OUTPUT FROM SPBCO OR SPBFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  ABD .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         M       INTEGER
                 THE NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SPBCO(ABD,LDA,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL SPBSL(ABD,LDA,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{SPOCO}
\index{linpack,SPOCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPOCO(A,LDA,N,RCOND,Z,INFO)
      INTEGER LDA,N,INFO
      REAL A(LDA,1),Z(1)
      REAL RCOND
 
      SPOCO FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SPOFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SPOCO BY SPOSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SPOCO BY SPOSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SPOCO BY SPODI.
      TO COMPUTE  INVERSE(A) , FOLLOW SPOCO BY SPODI.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.  ONLY THE
                 DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX  R  SO THAT  A = TRANS(R)*R
                 WHERE  TRANS(R)  IS THE TRANSPOSE.
                 THE STRICT LOWER TRIANGLE IS UNALTERED.
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
\end{verbatim}}
\section{SPODI}
\index{linpack,SPODI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPODI(A,LDA,N,DET,JOB)
      INTEGER LDA,N,JOB
      REAL A(LDA,1)
      REAL DET(2)
 
      SPODI COMPUTES THE DETERMINANT AND INVERSE OF A CERTAIN
      REAL SYMMETRIC POSITIVE DEFINITE MATRIX (SEE BELOW)
      USING THE FACTORS COMPUTED BY SPOCO, SPOFA OR SQRDC.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE OUTPUT  A  FROM SPOCO OR SPOFA
                 OR THE OUTPUT  X  FROM SQRDC.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         A       IF SPOCO OR SPOFA WAS USED TO FACTOR  A  THEN
                 SPODI PRODUCES THE UPPER HALF OF INVERSE(A) .
                 IF SQRDC WAS USED TO DECOMPOSE  X  THEN
                 SPODI PRODUCES THE UPPER HALF OF INVERSE(TRANS(X)*X)
                 WHERE TRANS(X) IS THE TRANSPOSE.
                 ELEMENTS OF  A  BELOW THE DIAGONAL ARE UNCHANGED.
                 IF THE UNITS DIGIT OF JOB IS ZERO,  A  IS UNCHANGED.
 
         DET     REAL(2)
                 DETERMINANT OF  A  OR OF  TRANS(X)*X  IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF SPOCO OR SPOFA HAS SET INFO .EQ. 0 .
 
\end{verbatim}}
\section{SPOFA}
\index{linpack,SPOFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPOFA(A,LDA,N,INFO)
      INTEGER LDA,N,INFO
      REAL A(LDA,1)
 
      SPOFA FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX.
 
      SPOFA IS USUALLY CALLED BY SPOCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR SPOCO) = (1 + 18/N)*(TIME FOR SPOFA) .
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.  ONLY THE
                 DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       AN UPPER TRIANGULAR MATRIX  R  SO THAT  A = TRANS(R)*R
                 WHERE  TRANS(R)  IS THE TRANSPOSE.
                 THE STRICT LOWER TRIANGLE IS UNALTERED.
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
\end{verbatim}}
\section{SPOSL}
\index{linpack,SPOSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPOSL(A,LDA,N,B)
      INTEGER LDA,N
      REAL A(LDA,1),B(1)
 
      SPOSL SOLVES THE REAL SYMMETRIC POSITIVE DEFINITE SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY SPOCO OR SPOFA.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE OUTPUT FROM SPOCO OR SPOFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SPOCO(A,LDA,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL SPOSL(A,LDA,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{SPPCO}
\index{linpack,SPPCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPPCO(AP,N,RCOND,Z,INFO)
      INTEGER N,INFO
      REAL AP(1),Z(1)
      REAL RCOND
 
      SPPCO FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      STORED IN PACKED FORM
      AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SPPFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SPPCO BY SPPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SPPCO BY SPPSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SPPCO BY SPPDI.
      TO COMPUTE  INVERSE(A) , FOLLOW SPPCO BY SPPDI.
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      AN UPPER TRIANGULAR MATRIX  R , STORED IN PACKED
                 FORM, SO THAT  A = TRANS(R)*R .
                 IF  INFO .NE. 0 , THE FACTORIZATION IS NOT COMPLETE.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.  IF INFO .NE. 0 , RCOND IS UNCHANGED.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS SINGULAR TO WORKING PRECISION, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
                 IF  INFO .NE. 0 , Z  IS UNCHANGED.
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  SIGNALS AN ERROR CONDITION.  THE LEADING MINOR
                      OF ORDER  K  IS NOT POSITIVE DEFINITE.
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{SPPDI}
\index{linpack,SPPDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPPDI(AP,N,DET,JOB)
      INTEGER N,JOB
      REAL AP(1)
      REAL DET(2)
 
      SPPDI COMPUTES THE DETERMINANT AND INVERSE
      OF A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      USING THE FACTORS COMPUTED BY SPPCO OR SPPFA .
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE OUTPUT FROM SPPCO OR SPPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         JOB     INTEGER
                 = 11   BOTH DETERMINANT AND INVERSE.
                 = 01   INVERSE ONLY.
                 = 10   DETERMINANT ONLY.
 
      ON RETURN
 
         AP      THE UPPER TRIANGULAR HALF OF THE INVERSE .
                 THE STRICT LOWER TRIANGLE IS UNALTERED.
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. DET(1) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL AND THE INVERSE IS REQUESTED.
         IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED CORRECTLY
         AND IF SPOCO OR SPOFA HAS SET INFO .EQ. 0 .
 
\end{verbatim}}
\section{SPPFA}
\index{linpack,SPPFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPPFA(AP,N,INFO)
      INTEGER N,INFO
      REAL AP(1)
 
      SPPFA FACTORS A REAL SYMMETRIC POSITIVE DEFINITE MATRIX
      STORED IN PACKED FORM.
 
      SPPFA IS USUALLY CALLED BY SPPCO, BUT IT CAN BE CALLED
      DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.
      (TIME FOR SPPCO) = (1 + 18/N)*(TIME FOR SPPFA) .
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         AP      AN UPPER TRIANGULAR MATRIX  R , STORED IN PACKED
                 FORM, SO THAT  A = TRANS(R)*R .
 
         INFO    INTEGER
                 = 0  FOR NORMAL RETURN.
                 = K  IF THE LEADING MINOR OF ORDER  K  IS NOT
                      POSITIVE DEFINITE.
 
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{SPPSL}
\index{linpack,SPPSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPPSL(AP,N,B)
      INTEGER N
      REAL AP(1),B(1)
 
      SPPSL SOLVES THE REAL SYMMETRIC POSITIVE DEFINITE SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY SPPCO OR SPPFA.
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE OUTPUT FROM SPPCO OR SPPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS
         A ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES
         SINGULARITY BUT IT IS USUALLY CAUSED BY IMPROPER SUBROUTINE
         ARGUMENTS.  IT WILL NOT OCCUR IF THE SUBROUTINES ARE CALLED
         CORRECTLY AND  INFO .EQ. 0 .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SPPCO(AP,N,RCOND,Z,INFO)
            IF (RCOND IS TOO SMALL .OR. INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL SPPSL(AP,N,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{SPTSL}
\index{linpack,SPTSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SPTSL(N,D,E,B)
      INTEGER N
      REAL D(1),E(1),B(1)
 
      SPTSL GIVEN A POSITIVE DEFINITE TRIDIAGONAL MATRIX AND A RIGHT
      HAND SIDE WILL FIND THE SOLUTION.
 
      ON ENTRY
 
         N        INTEGER
                  IS THE ORDER OF THE TRIDIAGONAL MATRIX.
 
         D        REAL(N)
                  IS THE DIAGONAL OF THE TRIDIAGONAL MATRIX.
                  ON OUTPUT D IS DESTROYED.
 
         E        REAL(N)
                  IS THE OFFDIAGONAL OF THE TRIDIAGONAL MATRIX.
                  E(1) THROUGH E(N-1) SHOULD CONTAIN THE
                  OFFDIAGONAL.
 
         B        REAL(N)
                  IS THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B        CONTAINS THE SOULTION.
 
\end{verbatim}}
\section{SQRDC}
\index{linpack,SQRDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SQRDC(X,LDX,N,P,QRAUX,JPVT,WORK,JOB)
      INTEGER LDX,N,P,JOB
      INTEGER JPVT(1)
      REAL X(LDX,1),QRAUX(1),WORK(1)
 
      SQRDC USES HOUSEHOLDER TRANSFORMATIONS TO COMPUTE THE QR
      FACTORIZATION OF AN N BY P MATRIX X.  COLUMN PIVOTING
      BASED ON THE 2-NORMS OF THE REDUCED COLUMNS MAY BE
      PERFORMED AT THE USERS OPTION.
 
      ON ENTRY
 
         X       REAL(LDX,P), WHERE LDX .GE. N.
                 X CONTAINS THE MATRIX WHOSE DECOMPOSITION IS TO BE
                 COMPUTED.
 
         LDX     INTEGER.
                 LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
         N       INTEGER.
                 N IS THE NUMBER OF ROWS OF THE MATRIX X.
 
         P       INTEGER.
                 P IS THE NUMBER OF COLUMNS OF THE MATRIX X.
 
         JPVT    INTEGER(P).
                 JPVT CONTAINS INTEGERS THAT CONTROL THE SELECTION
                 OF THE PIVOT COLUMNS.  THE K-TH COLUMN X(K) OF X
                 IS PLACED IN ONE OF THREE CLASSES ACCORDING TO THE
                 VALUE OF JPVT(K).
 
                    IF JPVT(K) .GT. 0, THEN X(K) IS AN INITIAL
                                       COLUMN.
 
                    IF JPVT(K) .EQ. 0, THEN X(K) IS A FREE COLUMN.
 
                    IF JPVT(K) .LT. 0, THEN X(K) IS A FINAL COLUMN.
 
                 BEFORE THE DECOMPOSITION IS COMPUTED, INITIAL COLUMNS
                 ARE MOVED TO THE BEGINNING OF THE ARRAY X AND FINAL
                 COLUMNS TO THE END.  BOTH INITIAL AND FINAL COLUMNS
                 ARE FROZEN IN PLACE DURING THE COMPUTATION AND ONLY
                 FREE COLUMNS ARE MOVED.  AT THE K-TH STAGE OF THE
                 REDUCTION, IF X(K) IS OCCUPIED BY A FREE COLUMN
                 IT IS INTERCHANGED WITH THE FREE COLUMN OF LARGEST
                 REDUCED NORM.  JPVT IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         WORK    REAL(P).
                 WORK IS A WORK ARRAY.  WORK IS NOT REFERENCED IF
                 JOB .EQ. 0.
 
         JOB     INTEGER.
                 JOB IS AN INTEGER THAT INITIATES COLUMN PIVOTING.
                 IF JOB .EQ. 0, NO PIVOTING IS DONE.
                 IF JOB .NE. 0, PIVOTING IS DONE.
 
      ON RETURN
 
         X       X CONTAINS IN ITS UPPER TRIANGLE THE UPPER
                 TRIANGULAR MATRIX R OF THE QR FACTORIZATION.
                 BELOW ITS DIAGONAL X CONTAINS INFORMATION FROM
                 WHICH THE ORTHOGONAL PART OF THE DECOMPOSITION
                 CAN BE RECOVERED.  NOTE THAT IF PIVOTING HAS
                 BEEN REQUESTED, THE DECOMPOSITION IS NOT THAT
                 OF THE ORIGINAL MATRIX X BUT THAT OF X
                 WITH ITS COLUMNS PERMUTED AS DESCRIBED BY JPVT.
 
         QRAUX   REAL(P).
                 QRAUX CONTAINS FURTHER INFORMATION REQUIRED TO RECOVER
                 THE ORTHOGONAL PART OF THE DECOMPOSITION.
 
         JPVT    JPVT(K) CONTAINS THE INDEX OF THE COLUMN OF THE
                 ORIGINAL MATRIX THAT HAS BEEN INTERCHANGED INTO
                 THE K-TH COLUMN, IF PIVOTING WAS REQUESTED.
 
\end{verbatim}}
\section{SQRLS}
\index{linpack,SQRLS}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SQRSL(X,LDX,N,K,QRAUX,Y,QY,QTY,B,RSD,XB,JOB,INFO)
      INTEGER LDX,N,K,JOB,INFO
      REAL X(LDX,1),QRAUX(1),Y(1),QY(1),QTY(1),B(1),RSD(1),XB(1)
 
      SQRSL APPLIES THE OUTPUT OF SQRDC TO COMPUTE COORDINATE
      TRANSFORMATIONS, PROJECTIONS, AND LEAST SQUARES SOLUTIONS.
      FOR K .LE. MIN(N,P), LET XK BE THE MATRIX
 
             XK = (X(JPVT(1)),X(JPVT(2)), ... ,X(JPVT(K)))
 
      FORMED FROM COLUMNNS JPVT(1), ... ,JPVT(K) OF THE ORIGINAL
      N X P MATRIX X THAT WAS INPUT TO SQRDC (IF NO PIVOTING WAS
      DONE, XK CONSISTS OF THE FIRST K COLUMNS OF X IN THEIR
      ORIGINAL ORDER).  SQRDC PRODUCES A FACTORED ORTHOGONAL MATRIX Q
      AND AN UPPER TRIANGULAR MATRIX R SUCH THAT
 
               XK = Q * (R)
                        (0)
 
      THIS INFORMATION IS CONTAINED IN CODED FORM IN THE ARRAYS
      X AND QRAUX.
 
      ON ENTRY
 
         X      REAL(LDX,P).
                X CONTAINS THE OUTPUT OF SQRDC.
 
         LDX    INTEGER.
                LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
         N      INTEGER.
                N IS THE NUMBER OF ROWS OF THE MATRIX XK.  IT MUST
                HAVE THE SAME VALUE AS N IN SQRDC.
 
         K      INTEGER.
                K IS THE NUMBER OF COLUMNS OF THE MATRIX XK.  K
                MUST NNOT BE GREATER THAN MIN(N,P), WHERE P IS THE
                SAME AS IN THE CALLING SEQUENCE TO SQRDC.
 
         QRAUX  REAL(P).
                QRAUX CONTAINS THE AUXILIARY OUTPUT FROM SQRDC.
 
         Y      REAL(N)
                Y CONTAINS AN N-VECTOR THAT IS TO BE MANIPULATED
                BY SQRSL.
 
         JOB    INTEGER.
                JOB SPECIFIES WHAT IS TO BE COMPUTED.  JOB HAS
                THE DECIMAL EXPANSION ABCDE, WITH THE FOLLOWING
                MEANING.
 
                     IF A.NE.0, COMPUTE QY.
                     IF B,C,D, OR E .NE. 0, COMPUTE QTY.
                     IF C.NE.0, COMPUTE B.
                     IF D.NE.0, COMPUTE RSD.
                     IF E.NE.0, COMPUTE XB.
 
                NOTE THAT A REQUEST TO COMPUTE B, RSD, OR XB
                AUTOMATICALLY TRIGGERS THE COMPUTATION OF QTY, FOR
                WHICH AN ARRAY MUST BE PROVIDED IN THE CALLING
                SEQUENCE.
 
      ON RETURN
 
         QY     REAL(N).
                QY CONNTAINS Q*Y, IF ITS COMPUTATION HAS BEEN
                REQUESTED.
 
         QTY    REAL(N).
                QTY CONTAINS TRANS(Q)*Y, IF ITS COMPUTATION HAS
                BEEN REQUESTED.  HERE TRANS(Q) IS THE
                TRANSPOSE OF THE MATRIX Q.
 
         B      REAL(K)
                B CONTAINS THE SOLUTION OF THE LEAST SQUARES PROBLEM
 
                     MINIMIZE NORM2(Y - XK*B),
 
                IF ITS COMPUTATION HAS BEEN REQUESTED.  (NOTE THAT
                IF PIVOTING WAS REQUESTED IN SQRDC, THE J-TH
                COMPONENT OF B WILL BE ASSOCIATED WITH COLUMN JPVT(J)
                OF THE ORIGINAL MATRIX X THAT WAS INPUT INTO SQRDC.)
 
         RSD    REAL(N).
                RSD CONTAINS THE LEAST SQUARES RESIDUAL Y - XK*B,
                IF ITS COMPUTATION HAS BEEN REQUESTED.  RSD IS
                ALSO THE ORTHOGONAL PROJECTION OF Y ONTO THE
                ORTHOGONAL COMPLEMENT OF THE COLUMN SPACE OF XK.
 
         XB     REAL(N).
                XB CONTAINS THE LEAST SQUARES APPROXIMATION XK*B,
                IF ITS COMPUTATION HAS BEEN REQUESTED.  XB IS ALSO
                THE ORTHOGONAL PROJECTION OF Y ONTO THE COLUMN SPACE
                OF X.
 
         INFO   INTEGER.
                INFO IS ZERO UNLESS THE COMPUTATION OF B HAS
                BEEN REQUESTED AND R IS EXACTLY SINGULAR.  IN
                THIS CASE, INFO IS THE INDEX OF THE FIRST ZERO
                DIAGONAL ELEMENT OF R AND B IS LEFT UNALTERED.
 
      THE PARAMETERS QY, QTY, B, RSD, AND XB ARE NOT REFERENCED
      IF THEIR COMPUTATION IS NOT REQUESTED AND IN THIS CASE
      CAN BE REPLACED BY DUMMY VARIABLES IN THE CALLING PROGRAM.
      TO SAVE STORAGE, THE USER MAY IN SOME CASES USE THE SAME
      ARRAY FOR DIFFERENT PARAMETERS IN THE CALLING SEQUENCE.  A
      FREQUENTLY OCCURING EXAMPLE IS WHEN ONE WISHES TO COMPUTE
      ANY OF B, RSD, OR XB AND DOES NOT NEED Y OR QTY.  IN THIS
      CASE ONE MAY IDENTIFY Y, QTY, AND ONE OF B, RSD, OR XB, WHILE
      PROVIDING SEPARATE ARRAYS FOR ANYTHING ELSE THAT IS TO BE
      COMPUTED.  THUS THE CALLING SEQUENCE
 
           CALL SQRSL(X,LDX,N,K,QRAUX,Y,DUM,Y,B,Y,DUM,110,INFO)
 
      WILL RESULT IN THE COMPUTATION OF B AND RSD, WITH RSD
      OVERWRITING Y.  MORE GENERALLY, EACH ITEM IN THE FOLLOWING
      LIST CONTAINS GROUPS OF PERMISSIBLE IDENTIFICATIONS FOR
      A SINGLE CALLINNG SEQUENCE.
 
           1. (Y,QTY,B) (RSD) (XB) (QY)
 
           2. (Y,QTY,RSD) (B) (XB) (QY)
 
           3. (Y,QTY,XB) (B) (RSD) (QY)
 
           4. (Y,QY) (QTY,B) (RSD) (XB)
 
           5. (Y,QY) (QTY,RSD) (B) (XB)
 
           6. (Y,QY) (QTY,XB) (B) (RSD)
 
      IN ANY GROUP THE VALUE RETURNED IN THE ARRAY ALLOCATED TO
      THE GROUP CORRESPONDS TO THE LAST MEMBER OF THE GROUP.
 
\end{verbatim}}
\section{SROT}
\index{blas,SROT}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  SROT (N,SX,INCX,SY,INCY,C,S)
 
      APPLIES A PLANE ROTATION.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SROTG}
\index{blas,SROTG}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE SROTG(SA,SB,C,S)
 
      CONSTRUCT GIVENS PLANE ROTATION.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SSCAL}
\index{blas,SSCAL}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  SSCAL(N,SA,SX,INCX)
 
      SCALES A VECTOR BY A CONSTANT.
      USES UNROLLED LOOPS FOR INCREMENT EQUAL TO 1.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{SSICO}
\index{linpack,SSICO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSICO(A,LDA,N,KPVT,RCOND,Z)
      INTEGER LDA,N,KPVT(1)
      REAL A(LDA,1),Z(1)
      REAL RCOND
 
      SSICO FACTORS A REAL SYMMETRIC MATRIX BY ELIMINATION WITH
      SYMMETRIC PIVOTING AND ESTIMATES THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SSIFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SSICO BY SSISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SSICO BY SSISL.
      TO COMPUTE  INVERSE(A) , FOLLOW SSICO BY SSIDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SSICO BY SSIDI.
      TO COMPUTE  INERTIA(A), FOLLOW SSICO BY SSIDI.
 
      ON ENTRY
 
         A       REAL(LDA, N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{SSIDI}
\index{linpack,SSIDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSIDI(A,LDA,N,KPVT,DET,INERT,WORK,JOB)
      INTEGER LDA,N,JOB
      REAL A(LDA,1),WORK(1)
      REAL DET(2)
      INTEGER KPVT(1),INERT(3)
 
      SSIDI COMPUTES THE DETERMINANT, INERTIA AND INVERSE
      OF A REAL SYMMETRIC MATRIX USING THE FACTORS FROM SSIFA.
 
      ON ENTRY
 
         A       REAL(LDA,N)
                 THE OUTPUT FROM SSIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY A.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SSIFA.
 
         WORK    REAL(N)
                 WORK VECTOR.  CONTENTS DESTROYED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  ABC  WHERE
                    IF  C .NE. 0, THE INVERSE IS COMPUTED,
                    IF  B .NE. 0, THE DETERMINANT IS COMPUTED,
                    IF  A .NE. 0, THE INERTIA IS COMPUTED.
 
                 FOR EXAMPLE, JOB = 111  GIVES ALL THREE.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         A      CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX.  THE STRICT LOWER TRIANGLE
                IS NEVER REFERENCED.
 
         DET    REAL(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
         INERT  INTEGER(3)
                THE INERTIA OF THE ORIGINAL MATRIX.
                INERT(1)  =  NUMBER OF POSITIVE EIGENVALUES.
                INERT(2)  =  NUMBER OF NEGATIVE EIGENVALUES.
                INERT(3)  =  NUMBER OF ZERO EIGENVALUES.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF THE INVERSE IS REQUESTED
         AND  SSICO  HAS SET RCOND .EQ. 0.0
         OR  SSIFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{SSIFA}
\index{linpack,SSIFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSIFA(A,LDA,N,KPVT,INFO)
      INTEGER LDA,N,KPVT(1),INFO
      REAL A(LDA,1)
 
      SSIFA FACTORS A REAL SYMMETRIC MATRIX BY ELIMINATION
      WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW SSIFA BY SSISL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SSIFA BY SSISL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SSIFA BY SSIDI.
      TO COMPUTE  INERTIA(A) , FOLLOW SSIFA BY SSIDI.
      TO COMPUTE  INVERSE(A) , FOLLOW SSIFA BY SSIDI.
 
      ON ENTRY
 
         A       REAL(LDA,N)
                 THE SYMMETRIC MATRIX TO BE FACTORED.
                 ONLY THE DIAGONAL AND UPPER TRIANGLE ARE USED.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      ON RETURN
 
         A       A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT SSISL OR SSIDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
\end{verbatim}}
\section{SSISL}
\index{linpack,SSISL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSISL(A,LDA,N,KPVT,B)
      INTEGER LDA,N,KPVT(1)
      REAL A(LDA,1),B(1)
 
      SSISL SOLVES THE REAL SYMMETRIC SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY SSIFA.
 
      ON ENTRY
 
         A       REAL(LDA,N)
                 THE OUTPUT FROM SSIFA.
 
         LDA     INTEGER
                 THE LEADING DIMENSION OF THE ARRAY  A .
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SSIFA.
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  SSICO  HAS SET RCOND .EQ. 0.0
         OR  SSIFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SSIFA(A,LDA,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL SSISL(A,LDA,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{SSPCO}
\index{linpack,SSPCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSPCO(AP,N,KPVT,RCOND,Z)
      INTEGER N,KPVT(1)
      REAL AP(1),Z(1)
      REAL RCOND
 
      SSPCO FACTORS A REAL SYMMETRIC MATRIX STORED IN PACKED
      FORM BY ELIMINATION WITH SYMMETRIC PIVOTING AND ESTIMATES
      THE CONDITION OF THE MATRIX.
 
      IF  RCOND  IS NOT NEEDED, SSPFA IS SLIGHTLY FASTER.
      TO SOLVE  A*X = B , FOLLOW SSPCO BY SSPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SSPCO BY SSPSL.
      TO COMPUTE  INVERSE(A) , FOLLOW SSPCO BY SSPDI.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SSPCO BY SSPDI.
      TO COMPUTE  INERTIA(A), FOLLOW SSPCO BY SSPDI.
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .
                 FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS
                 IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K) = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{SSPDI}
\index{linpack,SSPDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSPDI(AP,N,KPVT,DET,INERT,WORK,JOB)
      INTEGER N,JOB
      REAL AP(1),WORK(1)
      REAL DET(2)
      INTEGER KPVT(1),INERT(3)
 
      SSPDI COMPUTES THE DETERMINANT, INERTIA AND INVERSE
      OF A REAL SYMMETRIC MATRIX USING THE FACTORS FROM SSPFA,
      WHERE THE MATRIX IS STORED IN PACKED FORM.
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE OUTPUT FROM SSPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX A.
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SSPFA.
 
         WORK    REAL(N)
                 WORK VECTOR.  CONTENTS IGNORED.
 
         JOB     INTEGER
                 JOB HAS THE DECIMAL EXPANSION  ABC  WHERE
                    IF  C .NE. 0, THE INVERSE IS COMPUTED,
                    IF  B .NE. 0, THE DETERMINANT IS COMPUTED,
                    IF  A .NE. 0, THE INERTIA IS COMPUTED.
 
                 FOR EXAMPLE, JOB = 111  GIVES ALL THREE.
 
      ON RETURN
 
         VARIABLES NOT REQUESTED BY JOB ARE NOT USED.
 
         AP     CONTAINS THE UPPER TRIANGLE OF THE INVERSE OF
                THE ORIGINAL MATRIX, STORED IN PACKED FORM.
                THE COLUMNS OF THE UPPER TRIANGLE ARE STORED
                SEQUENTIALLY IN A ONE-DIMENSIONAL ARRAY.
 
         DET    REAL(2)
                DETERMINANT OF ORIGINAL MATRIX.
                DETERMINANT = DET(1) * 10.0**DET(2)
                WITH 1.0 .LE. ABS(DET(1)) .LT. 10.0
                OR DET(1) = 0.0.
 
         INERT  INTEGER(3)
                THE INERTIA OF THE ORIGINAL MATRIX.
                INERT(1)  =  NUMBER OF POSITIVE EIGENVALUES.
                INERT(2)  =  NUMBER OF NEGATIVE EIGENVALUES.
                INERT(3)  =  NUMBER OF ZERO EIGENVALUES.
 
      ERROR CONDITION
 
         A DIVISION BY ZERO WILL OCCUR IF THE INVERSE IS REQUESTED
         AND  SSPCO  HAS SET RCOND .EQ. 0.0
         OR  SSPFA  HAS SET  INFO .NE. 0 .
 
\end{verbatim}}
\section{SSPFA}
\index{linpack,SSPFA}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSPFA(AP,N,KPVT,INFO)
      INTEGER N,KPVT(1),INFO
      REAL AP(1)
 
      SSPFA FACTORS A REAL SYMMETRIC MATRIX STORED IN
      PACKED FORM BY ELIMINATION WITH SYMMETRIC PIVOTING.
 
      TO SOLVE  A*X = B , FOLLOW SSPFA BY SSPSL.
      TO COMPUTE  INVERSE(A)*C , FOLLOW SSPFA BY SSPSL.
      TO COMPUTE  DETERMINANT(A) , FOLLOW SSPFA BY SSPDI.
      TO COMPUTE  INERTIA(A) , FOLLOW SSPFA BY SSPDI.
      TO COMPUTE  INVERSE(A) , FOLLOW SSPFA BY SSPDI.
 
      ON ENTRY
 
         AP      REAL (N*(N+1)/2)
                 THE PACKED FORM OF A SYMMETRIC MATRIX  A .  THE
                 COLUMNS OF THE UPPER TRIANGLE ARE STORED SEQUENTIALLY
                 IN A ONE-DIMENSIONAL ARRAY OF LENGTH  N*(N+1)/2 .
                 SEE COMMENTS BELOW FOR DETAILS.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
      OUTPUT
 
         AP      A BLOCK DIAGONAL MATRIX AND THE MULTIPLIERS WHICH
                 WERE USED TO OBTAIN IT STORED IN PACKED FORM.
                 THE FACTORIZATION CAN BE WRITTEN  A = U*D*TRANS(U)
                 WHERE  U  IS A PRODUCT OF PERMUTATION AND UNIT
                 UPPER TRIANGULAR MATRICES , TRANS(U) IS THE
                 TRANSPOSE OF  U , AND  D  IS BLOCK DIAGONAL
                 WITH 1 BY 1 AND 2 BY 2 BLOCKS.
 
         KPVT    INTEGER(N)
                 AN INTEGER VECTOR OF PIVOT INDICES.
 
         INFO    INTEGER
                 = 0  NORMAL VALUE.
                 = K  IF THE K-TH PIVOT BLOCK IS SINGULAR. THIS IS
                      NOT AN ERROR CONDITION FOR THIS SUBROUTINE,
                      BUT IT DOES INDICATE THAT SSPSL OR SSPDI MAY
                      DIVIDE BY ZERO IF CALLED.
 
      PACKED STORAGE
 
           THE FOLLOWING PROGRAM SEGMENT WILL PACK THE UPPER
           TRIANGLE OF A SYMMETRIC MATRIX.
 
                 K = 0
                 DO 20 J = 1, N
                    DO 10 I = 1, J
                       K = K + 1
                       AP(K)  = A(I,J)
              10    CONTINUE
              20 CONTINUE
 
\end{verbatim}}
\section{SSPSL}
\index{linpack,SSPSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSPSL(AP,N,KPVT,B)
      INTEGER N,KPVT(1)
      REAL AP(1),B(1)
 
      SSISL SOLVES THE REAL SYMMETRIC SYSTEM
      A * X = B
      USING THE FACTORS COMPUTED BY SSPFA.
 
      ON ENTRY
 
         AP      REAL(N*(N+1)/2)
                 THE OUTPUT FROM SSPFA.
 
         N       INTEGER
                 THE ORDER OF THE MATRIX  A .
 
         KPVT    INTEGER(N)
                 THE PIVOT VECTOR FROM SSPFA.
 
         B       REAL(N)
                 THE RIGHT HAND SIDE VECTOR.
 
      ON RETURN
 
         B       THE SOLUTION VECTOR  X .
 
      ERROR CONDITION
 
         A DIVISION BY ZERO MAY OCCUR IF  SSPCO  HAS SET RCOND .EQ. 0.0
         OR  SSPFA  HAS SET INFO .NE. 0  .
 
      TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX
      WITH  P  COLUMNS
            CALL SSPFA(AP,N,KPVT,INFO)
            IF (INFO .NE. 0) GO TO ...
            DO 10 J = 1, P
               CALL SSPSL(AP,N,KPVT,C(1,J))
         10 CONTINUE
 
\end{verbatim}}
\section{SSVDC}
\index{linpack,SSVDC}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE SSVDC(X,LDX,N,P,S,E,U,LDU,V,LDV,WORK,JOB,INFO)
      INTEGER LDX,N,P,LDU,LDV,JOB,INFO
      REAL X(LDX,1),S(1),E(1),U(LDU,1),V(LDV,1),WORK(1)
 
 
      SSVDC IS A SUBROUTINE TO REDUCE A REAL NXP MATRIX X BY
      ORTHOGONAL TRANSFORMATIONS U AND V TO DIAGONAL FORM.  THE
      DIAGONAL ELEMENTS S(I) ARE THE SINGULAR VALUES OF X.  THE
      COLUMNS OF U ARE THE CORRESPONDING LEFT SINGULAR VECTORS,
      AND THE COLUMNS OF V THE RIGHT SINGULAR VECTORS.
 
      ON ENTRY
 
          X         REAL(LDX,P), WHERE LDX.GE.N.
                    X CONTAINS THE MATRIX WHOSE SINGULAR VALUE
                    DECOMPOSITION IS TO BE COMPUTED.  X IS
                    DESTROYED BY SSVDC.
 
          LDX       INTEGER.
                    LDX IS THE LEADING DIMENSION OF THE ARRAY X.
 
          N         INTEGER.
                    N IS THE NUMBER OF COLUMNS OF THE MATRIX X.
 
          P         INTEGER.
                    P IS THE NUMBER OF ROWS OF THE MATRIX X.
 
          LDU       INTEGER.
                    LDU IS THE LEADING DIMENSION OF THE ARRAY U.
                    (SEE BELOW).
 
          LDV       INTEGER.
                    LDV IS THE LEADING DIMENSION OF THE ARRAY V.
                    (SEE BELOW).
 
          WORK      REAL(N).
                    WORK IS A SCRATCH ARRAY.
 
          JOB       INTEGER.
                    JOB CONTROLS THE COMPUTATION OF THE SINGULAR
                    VECTORS.  IT HAS THE DECIMAL EXPANSION AB
                    WITH THE FOLLOWING MEANING
 
                         A.EQ.0    DO NOT COMPUTE THE LEFT SINGULAR
                                   VECTORS.
                         A.EQ.1    RETURN THE N LEFT SINGULAR VECTORS
                                   IN U.
                         A.GE.2    RETURN THE FIRST MIN(N,P) SINGULAR
                                   VECTORS IN U.
                         B.EQ.0    DO NOT COMPUTE THE RIGHT SINGULAR
                                   VECTORS.
                         B.EQ.1    RETURN THE RIGHT SINGULAR VECTORS
                                   IN V.
 
      ON RETURN
 
          S         REAL(MM), WHERE MM=MIN(N+1,P).
                    THE FIRST MIN(N,P) ENTRIES OF S CONTAIN THE
                    SINGULAR VALUES OF X ARRANGED IN DESCENDING
                    ORDER OF MAGNITUDE.
 
          E         REAL(P).
                    E ORDINARILY CONTAINS ZEROS.  HOWEVER SEE THE
                    DISCUSSION OF INFO FOR EXCEPTIONS.
 
          U         REAL(LDU,K), WHERE LDU.GE.N.  IF JOBA.EQ.1 THEN
                                    K.EQ.N, IF JOBA.GE.2 THEN
                                    K.EQ.MIN(N,P).
                    U CONTAINS THE MATRIX OF RIGHT SINGULAR VECTORS.
                    U IS NOT REFERENCED IF JOBA.EQ.0.  IF N.LE.P
                    OR IF JOBA.EQ.2, THEN U MAY BE IDENTIFIED WITH X
                    IN THE SUBROUTINE CALL.
 
          V         REAL(LDV,P), WHERE LDV.GE.P.
                    V CONTAINS THE MATRIX OF RIGHT SINGULAR VECTORS.
                    V IS NOT REFERENCED IF JOB.EQ.0.  IF P.LE.N,
                    THEN V MAY BE IDENTIFIED WITH X IN THE
                    SUBROUTINE CALL.
 
          INFO      INTEGER.
                    THE SINGULAR VALUES (AND THEIR CORRESPONDING
                    SINGULAR VECTORS) S(INFO+1),S(INFO+2),...,S(M)
                    ARE CORRECT (HERE M=MIN(N,P)).  THUS IF
                    INFO.EQ.0, ALL THE SINGULAR VALUES AND THEIR
                    VECTORS ARE CORRECT.  IN ANY EVENT, THE MATRIX
                    B = TRANS(U)*X*V IS THE BIDIAGONAL MATRIX
                    WITH THE ELEMENTS OF S ON ITS DIAGONAL AND THE
                    ELEMENTS OF E ON ITS SUPER-DIAGONAL (TRANS(U)
                    IS THE TRANSPOSE OF U).  THUS THE SINGULAR
                    VALUES OF X AND B ARE THE SAME.
 
\end{verbatim}}
\section{SSWAP}
\index{blas,SSWAP}
File: linpack.for\newline
Keywords: blas
{\small\begin{verbatim}
      SUBROUTINE  SSWAP (N,SX,INCX,SY,INCY)
 
      INTERCHANGES TWO VECTORS.
      USES UNROLLED LOOPS FOR INCREMENTS EQUAL TO 1.
      JACK DONGARRA, LINPACK, 3/11/78.
 
\end{verbatim}}
\section{STRCO}
\index{linpack,STRCO}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE STRCO(T,LDT,N,RCOND,Z,JOB)
      INTEGER LDT,N,JOB
      REAL T(LDT,1),Z(1)
      REAL RCOND
 
      STRCO ESTIMATES THE CONDITION OF A REAL TRIANGULAR MATRIX.
 
      ON ENTRY
 
         T       REAL(LDT,N)
                 T CONTAINS THE TRIANGULAR MATRIX. THE ZERO
                 ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                 THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                 USED TO STORE OTHER INFORMATION.
 
         LDT     INTEGER
                 LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
         N       INTEGER
                 N IS THE ORDER OF THE SYSTEM.
 
         JOB     INTEGER
                 = 0         T  IS LOWER TRIANGULAR.
                 = NONZERO   T  IS UPPER TRIANGULAR.
 
      ON RETURN
 
         RCOND   REAL
                 AN ESTIMATE OF THE RECIPROCAL CONDITION OF  T .
                 FOR THE SYSTEM  T*X = B , RELATIVE PERTURBATIONS
                 IN  T  AND  B  OF SIZE  EPSILON  MAY CAUSE
                 RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND .
                 IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION
                            1.0 + RCOND .EQ. 1.0
                 IS TRUE, THEN  T  MAY BE SINGULAR TO WORKING
                 PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF
                 EXACT SINGULARITY IS DETECTED OR THE ESTIMATE
                 UNDERFLOWS.
 
         Z       REAL(N)
                 A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.
                 IF  T  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS
                 AN APPROXIMATE NULL VECTOR IN THE SENSE THAT
                 NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .
 
\end{verbatim}}
\section{STRDI}
\index{linpack,STRDI}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE STRDI(T,LDT,N,DET,JOB,INFO)
      INTEGER LDT,N,JOB,INFO
      REAL T(LDT,1),DET(2)
 
      STRDI COMPUTES THE DETERMINANT AND INVERSE OF A REAL
      TRIANGULAR MATRIX.
 
      ON ENTRY
 
         T       REAL(LDT,N)
                 T CONTAINS THE TRIANGULAR MATRIX. THE ZERO
                 ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                 THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                 USED TO STORE OTHER INFORMATION.
 
         LDT     INTEGER
                 LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
         N       INTEGER
                 N IS THE ORDER OF THE SYSTEM.
 
         JOB     INTEGER
                 = 010       NO DET, INVERSE OF LOWER TRIANGULAR.
                 = 011       NO DET, INVERSE OF UPPER TRIANGULAR.
                 = 100       DET, NO INVERSE.
                 = 110       DET, INVERSE OF LOWER TRIANGULAR.
                 = 111       DET, INVERSE OF UPPER TRIANGULAR.
 
      ON RETURN
 
         T       INVERSE OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE UNCHANGED.
 
         DET     REAL(2)
                 DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.
                 OTHERWISE NOT REFERENCED.
                 DETERMINANT = DET(1) * 10.0**DET(2)
                 WITH  1.0 .LE. ABS(DET(1)) .LT. 10.0
                 OR  DET(1) .EQ. 0.0 .
 
         INFO    INTEGER
                 INFO CONTAINS ZERO IF THE SYSTEM IS NONSINGULAR
                 AND THE INVERSE IS REQUESTED.
                 OTHERWISE INFO CONTAINS THE INDEX OF
                 A ZERO DIAGONAL ELEMENT OF T.
 
\end{verbatim}}
\section{STRSL}
\index{linpack,STRSL}
File: linpack.for\newline
Keywords: linpack
{\small\begin{verbatim}
      SUBROUTINE STRSL(T,LDT,N,B,JOB,INFO)
      INTEGER LDT,N,JOB,INFO
      REAL T(LDT,1),B(1)
 
 
      STRSL SOLVES SYSTEMS OF THE FORM
 
                    T * X = B
      OR
                    TRANS(T) * X = B
 
      WHERE T IS A TRIANGULAR MATRIX OF ORDER N. HERE TRANS(T)
      DENOTES THE TRANSPOSE OF THE MATRIX T.
 
      ON ENTRY
 
          T         REAL(LDT,N)
                    T CONTAINS THE MATRIX OF THE SYSTEM. THE ZERO
                    ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND
                    THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE
                    USED TO STORE OTHER INFORMATION.
 
          LDT       INTEGER
                    LDT IS THE LEADING DIMENSION OF THE ARRAY T.
 
          N         INTEGER
                    N IS THE ORDER OF THE SYSTEM.
 
          B         REAL(N).
                    B CONTAINS THE RIGHT HAND SIDE OF THE SYSTEM.
 
          JOB       INTEGER
                    JOB SPECIFIES WHAT KIND OF SYSTEM IS TO BE SOLVED.
                    IF JOB IS
 
                         00   SOLVE T*X=B, T LOWER TRIANGULAR,
                         01   SOLVE T*X=B, T UPPER TRIANGULAR,
                         10   SOLVE TRANS(T)*X=B, T LOWER TRIANGULAR,
                         11   SOLVE TRANS(T)*X=B, T UPPER TRIANGULAR.
 
      ON RETURN
 
          B         B CONTAINS THE SOLUTION, IF INFO .EQ. 0.
                    OTHERWISE B IS UNALTERED.
 
          INFO      INTEGER
                    INFO CONTAINS ZERO IF THE SYSTEM IS NONSINGULAR.
                    OTHERWISE INFO CONTAINS THE INDEX OF
                    THE FIRST ZERO DIAGONAL ELEMENT OF T.
 
\end{verbatim}}
\end{document}
