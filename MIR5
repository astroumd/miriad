Notes on what was done to miriad for the MIR5 transition:

   NOTE:: this revision will remain on a branch until deemed stable,
   after which the main trunk will become a MIR4 branch, and
   MIR5 will eventually become the trunk once this branch has been deemed
	production.

   The following CVS commands were used to branch:

	cvs rtag mir_4_0_4	
	cvs rtag -b MIR5
	<VERSION files modified to 4.0.5 in the main trunk>
	<VERSION files modified to 5.0.0 in the MIR5 branch>

status and work done on the merge:
==================================

MIRSUBS C-routines:

interface.c		minor merge - DONE
bug.c			some work needed, nothing showstopping (remove VMS?) [atnf has older code mostly]
dio.c     		minor work - DONE
dirs.c			VMS only, keep it??
headio.c		major work -- THIS IS WHERE the INT4/INT8 work is performed - DONE
hio.c			minor work - DONE
key.c			ATNF uses keyc.c !! work needed, but works 'as is'
maskio.c		minor work needed - DONE  (except the size_t/off_t stuff)
pack.c			we use the WORDS_BIGENDIAN symbol (if available) 
scrio.c			minor work (int vs. off_t/size_t) - DONE
xyio.c			minor work (added xydim) - DONE
xyzio.c			minor work (added xyzdim) - DONE
uvio.c			the ATNF version was taken, CARMA things merged in. - DONE

iface.f2c		new from ATNF - DONE
mm.f2c			straight from ATNF - DONE
packwrap.f2c		straight from ATNF - DONE
tcpio.f2c		straight from ATNF - DONE
wrap.f2c		straight from ATNF - DONE
xyziowrap.f2c		straight from ATNF - DONE



TOOLS:

intf2c.c		deals with the fortran integer/logical issues - DONE
flint.c			minor merge - DONE
ratty.c			minor merge - DONE
doc_atnf.c		simple update (we have our own dogged doc.c) - DONE


MIRSUBS FOR-routines:
  we have 141 .for files, atnf has 121 files, all but 1 are extra in 'us'
  but note atnf also stores them in architecture specific subdirectories

keyf.for		ATNF has key.for (see key.c and keyc.c notes)

uvdat.for		notice some merging needed


Issues:
=======


1) integer items were previously read using rdhdd in wrap.f2c and rdhdi_c() [in headio.c]; 
   these are now using rdhdi/rdhdl and an extra check if they don't exceed 2^31 if requested
   back as integers in fortran
	(hmm.... but what if integers in fortran are able to handle > 2^31.....)
   For clarity, rdhdd() will also read and convert INT8's now

   Once MIR4 has disappeared, this issue could be cleared up.



*) the code seems to work on linux, but both solaris and mac surprisingly show via testmirlib 
   that not all the int8 case actually work!!!


Architectures supported/not-supported:
======================================

supported:
LINUX:	  most linux distributions out of the box
MacOSX:	  10.3 and 10.4 are known to work
CygWin:	  supposed to work
Solaris:  supposed to work

not-so-well supported:
SGI/IRIX: launched in 1988, in sep.2006 SGI announced end-of-life 
VMS:
Unicos:
HP/UX:
AIX:
